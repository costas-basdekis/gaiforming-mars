{"version":3,"sources":["game/GameService.js","components/draw/Hexagon.js","components/draw/DefaultHexagon.js","components/board/Hex.js","components/board/Board.js","components/resources/ProductionBox.js","components/resources/ResourceBox.js","components/resources/ResourceAndProductionBoxes.js","components/resources/TagCircle.js","components/players/Player.js","components/players/Players.js","components/draw/RightArrow.js","components/draw/Ocean.js","components/projects/AquiferStandardProject.js","components/draw/TemperatureGauge.js","components/projects/AsteroidStandardProject.js","components/draw/City.js","components/projects/CityStandardProject.js","components/draw/Greenery.js","components/projects/GreeneryStandardProject.js","components/projects/PowerPlantStandardProject.js","components/projects/StandardProjects.js","components/parameters/GlobalParameter.js","components/parameters/GlobalParameters.js","components/Game.js","game/GameControl.js","App.js","serviceWorker.js","index.js"],"names":["GameService","player","project","name","cost","resources","resource","value","production","game","canPurchase","newPlayer","newGame","benefit","globalParameters","count","_","range","parameter","maxValue","map","globalParameter","Object","assign","indexBy","playerCount","board","this","makeBoard","makeGlobalParameters","activePlayer","players","slice","makePlayer","y","x","active","Math","ceil","abs","parameters","initialValue","object","makeResource","tags","tag","makeTag","hand","playedCards","initialProduction","type","played","cards","label","colour","fontColour","prefix","emptyColour","fullColour","getLabel","standardProjects","money","energy","tiles","tr","temperature","oceans","water","oxygen","greenery","city","id","resourcesByName","standardProjectsByName","Hexagon","props","size","constructor","position","fill","transform","undefined","points","getPointsString","stroke","strokeWidth","pointsStringBySize","ratio","join","Component","DefaultHexagon","xlinkHref","DefaultHexagonDef","Def","Hex","getMeasurements","shortSize","longOffset","shortOffset","longSize","floor","sqrt","Board","offset","getBorder","width","height","row","filter","tile","key","length","ProductionBox","dominantBaseline","textAnchor","ResourceBox","ResourceAndProductionBoxes","vertical","TagCircle","rx","ry","Player","selectPlayer","control","getSize","fillOpacity","onClick","className","style","pointerEvents","index","Players","playerSize","RightArrow","d","path","Ocean","AquiferStandardProject","purchase","purchaseProject","aquifer","component","TemperatureGauge","AsteroidStandardProject","asteroid","City","CityStandardProject","Greenery","GreeneryStandardProject","PowerPlantStandardProject","powerPlant","StandardProjects","GlobalParameter","globalParametersSize","GlobalParameterDef","getXlinkHref","mask","stopColor","GlobalParameters","globalParameterSize","column","columnsPerRow","rows","max","GlobalParametersDefs","Defs","Game","gameSize","boardSize","playersSize","standardProjectsSize","GameControl","update","otherPlayer","updateActivePlayer","App","state","makeGame","updateGame","func","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.229709a9.chunk.js","sourcesContent":["import _ from \"underscore\";\r\n\r\nclass GameService {\r\n\tstatic resources = [\r\n  \t{name: 'tr', label: 'Terraform Rating', colour: 'cyan', fontColour: 'white', initialProduction: 20},\r\n  \t{name: 'money', label: 'MegaCredits', colour: 'yellow', fontColour: 'black', initialValue: 3000},\r\n  \t{name: 'steel', label: 'Steel', colour: 'brown', fontColour: 'white'},\r\n  \t{name: 'titanium', label: 'Titanium', colour: 'black', fontColour: 'white'},\r\n  \t{name: 'plants', label: 'Plants', colour: 'green', fontColour: 'white'},\r\n  \t{name: 'energy', label: 'Energy', colour: 'purple', fontColour: 'white'},\r\n  \t{name: 'heat', label: 'Heat', colour: 'orangered', fontColour: 'white'},\r\n  ];\r\n  static tags = [\r\n  \t{name: 'building', label: 'Building', colour: 'brown', fontColour: 'white', prefix: 'B'},\r\n    {name: 'space', label: 'Space', colour: 'black', fontColour: 'white', prefix: 'S'},\r\n    {name: 'plant', label: 'Plant', colour: 'green', fontColour: 'white', prefix: 'P'},\r\n    {name: 'energy', label: 'Energy', colour: 'purple', fontColour: 'white', prefix: 'En'},\r\n    {name: 'science', label: 'Science', colour: 'white', fontColour: 'black', prefix: 'S'},\r\n    {name: 'earth', label: 'Earth', colour: 'cyan', fontColour: 'black', prefix: 'Ea'},\r\n    {name: 'jupiter', label: 'Jupiter', colour: 'orange', fontColour: 'black', prefix: 'J'},\r\n  \t{name: 'animal', label: 'Animal', colour: 'green', fontColour: 'white', prefix: 'A'},\r\n    {name: 'microbe', label: 'Microbe', colour: 'green', fontColour: 'white', prefix: 'M'},\r\n    {name: 'event', label: 'Event', colour: 'yellow', fontColour: 'black', prefix: 'Ev'},\r\n    {name: 'city', label: 'City', colour: 'grey', fontColour: 'black', prefix: 'C'},\r\n  ];\r\n  static globalParameters = [\r\n  \t{\r\n  \t  name: 'temperature', label: 'Temperature', initialValue: 0, maxValue: 19,\r\n      emptyColour: 'blue', fullColour: 'red',\r\n      getLabel: parameter => `${-30 + parameter.value * 2}\\u00B0C`,\r\n    },\r\n  \t{\r\n  \t  name: 'oxygen', label: 'Oxygen', initialValue: 0, maxValue: 14,\r\n      emptyColour: 'grey', fullColour: 'cyan',\r\n      getLabel: parameter => `${parameter.value}%`,\r\n    },\r\n  \t{\r\n  \t  name: 'oceans', label: 'Oceans', initialValue: 0, maxValue: 9,\r\n      emptyColour: 'darkgoldenrod', fullColour: 'blue',\r\n      getLabel: parameter => `${parameter.value} oceans`,\r\n    },\r\n  ];\r\n  static standardProjects = [\r\n  \t{\r\n    \tname: 'powerPlant',\r\n      cost: {money: {value: 11}},\r\n      benefit: {energy: {production: 1}},\r\n      globalParameters: {},\r\n      tiles: {},\r\n    },\r\n  \t{\r\n    \tname: 'asteroid',\r\n      cost: {money: {value: 14}},\r\n      benefit: {tr: {production: 1}},\r\n      globalParameters: {temperature: 1},\r\n      tiles: {},\r\n    },\r\n  \t{\r\n    \tname: 'aquifer',\r\n      cost: {money: {value: 18}},\r\n      benefit: {tr: {production: 1}},\r\n      globalParameters: {oceans: 1},\r\n      tiles: {water: 1},\r\n    },\r\n  \t{\r\n    \tname: 'greenery',\r\n      cost: {money: {value: 23}},\r\n      benefit: {tr: {production: 1}},\r\n      globalParameters: {oxygen: 1},\r\n      tiles: {greenery: 1},\r\n    },\r\n  \t{\r\n    \tname: 'city',\r\n      cost: {money: {value: 25}},\r\n      benefit: {money: {production: 1}},\r\n      globalParameters: {},\r\n      tiles: {city: 1},\r\n    },\r\n  ];\r\n  static players = [\r\n  \t{id: 1, colour: 'red', fontColour: 'white'},\r\n  \t{id: 2, colour: 'blue', fontColour: 'white'},\r\n  ];\r\n  static canPurchase(player, project) {\r\n    if (!player) {\r\n      return false;\r\n    }\r\n  \tfor (const name in project.cost) {\r\n    \tif (!(name in player.resources)) {\r\n      \treturn false;\r\n      }\r\n      const resource = player.resources[name];\r\n      const cost = project.cost[name];\r\n      if ('value' in cost) {\r\n      \tif (cost.value > resource.value) {\r\n        \treturn false;\r\n        }\r\n      }\r\n      if ('production' in cost) {\r\n      \tif (cost.production > resource.production) {\r\n        \treturn false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  static purchase(game, player, project) {\r\n  \tif (!GameService.canPurchase(player, project)) {\r\n    \treturn {newPlayer: player, newGame: game};\r\n    }\r\n    const newPlayer = {...player, resources: {...player.resources}};\r\n    for (const name in project.cost) {\r\n    \tconst cost = project.cost[name];\r\n    \tconst resource = newPlayer.resources[name] = {...newPlayer.resources[name]};\r\n      if ('value' in cost) {\r\n      \tresource.value -= cost.value;\r\n      }\r\n      if ('production' in cost) {\r\n      \tresource.production -= cost.production;\r\n      }\r\n    }\r\n    for (const name in project.benefit) {\r\n    \tconst benefit = project.benefit[name];\r\n      const resource = newPlayer.resources[name] = {...newPlayer.resources[name]};\r\n      if ('value' in benefit) {\r\n      \tresource.value += benefit.value;\r\n      }\r\n      if ('production' in benefit) {\r\n      \tresource.production += benefit.production;\r\n      }\r\n    }\r\n    let newGame = game;\r\n    for (const name in project.globalParameters) {\r\n      const count = project.globalParameters[name];\r\n      for (const i of _.range(count)) {\r\n        const parameter = newGame.globalParameters[name];\r\n        if (parameter.value >= parameter.maxValue) {\r\n          break;\r\n        }\r\n        newGame = {\r\n          ...newGame,\r\n          globalParameters: newGame.globalParameters.map(globalParameter =>\r\n            globalParameter.name === parameter.name ? ({\r\n              ...globalParameter,\r\n              value: globalParameter.value + 1,\r\n            }) : globalParameter),\r\n        };\r\n        Object.assign(\r\n          newGame.globalParameters,\r\n          _.indexBy(newGame.globalParameters, 'name'));\r\n      }\r\n    }\r\n    return {newPlayer, newGame};\r\n  }\r\n  static makeGame({playerCount = 2} = {}) {\r\n  \treturn {\r\n      board: this.makeBoard(),\r\n      globalParameters: this.makeGlobalParameters(),\r\n      activePlayer: null,\r\n      players: this.players\r\n      \t.slice(0, playerCount)\r\n        .map(player => this.makePlayer(player)),\r\n    };\r\n  }\r\n  static makeBoard() {\r\n  \treturn _.range(9).map(y => _.range(9).map(x => ({\r\n      x, y, active: (\r\n        x >= Math.ceil((Math.abs(y - 4) - 1) / 2)\r\n        && x <= 8 - Math.ceil((Math.abs(y - 4)) / 2)\r\n      ) || (y === 0 && x === 0) || (y === 8 && x === 0),\r\n    })));\r\n  }\r\n  static makeGlobalParameters() {\r\n  \tconst parameters = this.globalParameters.map(parameter => ({\r\n    \t...parameter,\r\n      value: parameter.initialValue,\r\n    }));\r\n    Object.assign(parameters, _.indexBy(parameters, 'name'));\r\n\r\n    return parameters;\r\n  }\r\n  static makePlayer(player) {\r\n    return {\r\n      ...player,\r\n      resources: _.object(this.resources.map(resource =>\r\n      \t[resource.name, this.makeResource(resource)])),\r\n      tags: _.object(this.tags.map(tag =>\r\n      \t[tag.name, this.makeTag(tag)])),\r\n      hand: [],\r\n      playedCards: [],\r\n      active: false,\r\n    };\r\n  }\r\n  static makeResource(resource) {\r\n  \treturn {\r\n      value: resource.initialValue || 0,\r\n      production: resource.initialProduction || 0,\r\n      type: resource,\r\n    };\r\n  }\r\n  static makeTag(tag) {\r\n  \treturn {\r\n    \tplayed: 0,\r\n      cards: [],\r\n      type: tag,\r\n    };\r\n  }\r\n}\r\nGameService.resourcesByName = _.indexBy(GameService.resources, 'name');\r\nGameService.standardProjectsByName = _.indexBy(GameService.standardProjects, 'name');\r\n\r\nexport default GameService;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Hexagon extends Component {\r\n  static size = 25;\r\n  static points = [\r\n    [0, 50],\r\n    [43, 25],\r\n    [43, -25],\r\n    [0, -50],\r\n    [-43, -25],\r\n    [-43, 25],\r\n    [0, 50],\r\n  ];\r\n  static pointsStringBySize = {};\r\n\r\n  static getPointsString(size) {\r\n    if (!(size in this.pointsStringBySize)) {\r\n      const ratio = size / 50;\r\n      this.pointsStringBySize[size] = this.points\r\n        .map(([x, y]) => `${x * ratio},${y * ratio}`)\r\n        .join(' ');\r\n    }\r\n    return this.pointsStringBySize[size];\r\n  }\r\n\r\n  render() {\r\n    const {id, size = this.constructor.size, position, fill} = this.props;\r\n    return (\r\n      <polygon\r\n        id={id}\r\n        transform={position ? `translate(${position.x}, ${position.y})` : undefined}\r\n        points={this.constructor.getPointsString(size)}\r\n        stroke={'red'} strokeWidth={3}\r\n        fill={fill}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hexagon;\r\n","import React, {Component} from \"react\";\r\nimport Hexagon from \"./Hexagon\";\r\n\r\nclass DefaultHexagon extends Component {\r\n  static xlinkHref = 'hexagonDefault';\r\n\r\n  render() {\r\n    const {position = {x: 0, y: 0}, fill} = this.props;\r\n    return (\r\n      <use\r\n        x={position.x} y={position.y}\r\n        xlinkHref={`#${this.constructor.xlinkHref}`}\r\n        fill={fill}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass DefaultHexagonDef extends Component {\r\n  render() {\r\n    return (\r\n      <Hexagon id={DefaultHexagon.xlinkHref}/>\r\n    );\r\n  }\r\n}\r\nDefaultHexagon.Def = DefaultHexagonDef;\r\n\r\nexport default DefaultHexagon;\r\n","import React, {Component} from \"react\";\r\nimport Hexagon from \"../draw/Hexagon\";\r\nimport DefaultHexagon from \"../draw/DefaultHexagon\";\r\n\r\nclass Hex extends Component {\r\n  static getMeasurements(size = Hexagon.size) {\r\n    const longSize = 2 * size;\r\n    const shortSize = Math.floor(size * Math.sqrt(3));\r\n    const longOffset = longSize * 3 / 4 - 1 /* Subtract 1 for a snug fit */;\r\n    const shortOffset = shortSize - 1 /* Subtract 1 for a snug fit */;\r\n    return {longSize, shortSize, longOffset, shortOffset};\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      size = Hexagon.size,\r\n      x = 0, y = 0,\r\n      fill = 'black',\r\n    } = this.props;\r\n    const {shortSize, longOffset, shortOffset} = this.constructor.getMeasurements(size);\r\n    return (\r\n      <DefaultHexagon position={{\r\n        x: (y % 2 === 0 ? 0 : shortSize / 2) + shortOffset * x,\r\n        y: longOffset * y,\r\n      }} fill={fill}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hex;\r\n","import React, {Component} from \"react\";\r\nimport Hex from \"./Hex\";\r\n\r\nclass Board extends Component {\r\n  static getBorder(board) {\r\n    const {longSize, shortSize, longOffset, shortOffset} = Hex.getMeasurements();\r\n    const x = -shortSize / 2 - 20, y = -longSize / 2 - 20;\r\n    const width = board[0].length * shortOffset + 40;\r\n    const height = board.length * longOffset - longOffset + longSize + 40;\r\n    return {x, y, width, height};\r\n  }\r\n\r\n  static getSize(board) {\r\n    const {width, height} = this.getBorder(board);\r\n    return {width, height};\r\n  }\r\n\r\n  render() {\r\n    const {board, offset} = this.props;\r\n    const {x, y, width, height} = this.constructor.getBorder(board);\r\n    return (\r\n      <g transform={`translate(${-x + offset.x}, ${-y + offset.y})`}>\r\n        <rect x={x} y={y} width={width} height={height}/>\r\n        {board.map(row => row.filter(tile => tile.active).map(tile =>\r\n          <Hex key={`${tile.x},${tile.y}`} x={tile.x} y={tile.y}/>))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, {Component} from \"react\";\r\n\r\nclass ProductionBox extends Component {\r\n  render() {\r\n    const {resource, offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${3 + offset.y})`}>\r\n        <rect\r\n          width={19} height={19}\r\n          fill={resource.type.colour} stroke={'slategrey'} strokeWidth={4}\r\n        />\r\n        <svg width={19} height={19}>\r\n          <text\r\n            x={\"50%\"} y={\"50%\"}\r\n            dominantBaseline={\"middle\"} textAnchor={\"middle\"}\r\n            fill={resource.type.fontColour}\r\n          >{resource.production}</text>\r\n        </svg>\r\n        <rect\r\n          width={19} height={19}\r\n          fill={'transparent'} stroke={'transparent'} strokeWidth={4}\r\n        >\r\n          <title>{resource.production} {resource.type.label} per\r\n            generation</title>\r\n        </rect>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductionBox;\r\n","import React, {Component} from \"react\";\r\n\r\nclass ResourceBox extends Component {\r\n  render() {\r\n    const {resource, offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${3 + offset.y})`}>\r\n        <rect\r\n          width={19} height={19}\r\n          fill={resource.type.colour} stroke={'black'}\r\n        />\r\n        <svg width={19} height={19}>\r\n          <text\r\n            x={\"50%\"} y={\"50%\"}\r\n            dominantBaseline={\"middle\"} textAnchor={\"middle\"}\r\n            fill={resource.type.fontColour}\r\n          >{resource.value}</text>\r\n        </svg>\r\n        <rect\r\n          width={19} height={19}\r\n          fill={'transparent'} stroke={'transparent'}\r\n        >\r\n          <title>{resource.value} {resource.type.label}</title>\r\n        </rect>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResourceBox;\r\n","import React, {Component, Fragment} from \"react\";\r\nimport ResourceBox from \"./ResourceBox\";\r\nimport ProductionBox from \"./ProductionBox\";\r\n\r\nclass ResourceAndProductionBoxes extends Component {\r\n  render() {\r\n    const {resource, offset, vertical = true} = this.props;\r\n    return (\r\n      <Fragment>\r\n        <ResourceBox\r\n          offset={{x: 0 + offset.x, y: 0 + offset.y}} resource={resource}\r\n        />\r\n        <ProductionBox\r\n          offset={\r\n            vertical\r\n              ? {x: 0 + offset.x, y: 25 + offset.y}\r\n              : {x: 25 + offset.x, y: 0 + offset.y}\r\n          }\r\n          resource={resource}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ResourceAndProductionBoxes;\r\n","import React, {Component} from \"react\";\r\n\r\nclass TagCircle extends Component {\r\n  render() {\r\n    const {tag, offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${3 + offset.y})`}>\r\n        <rect width={19} height={19} rx={10} ry={10} fill={tag.type.colour}\r\n              stroke={'black'}/>\r\n        <svg width={19} height={19}>\r\n          <text\r\n            x={\"50%\"} y={\"50%\"}\r\n            dominantBaseline={\"middle\"} textAnchor={\"middle\"}\r\n            fill={tag.type.fontColour}\r\n          >{tag.type.prefix}{tag.played}</text>\r\n        </svg>\r\n        <rect\r\n          width={19} height={19} rx={10} ry={10}\r\n          fill={'transparent'} stroke={'transparent'}\r\n        >\r\n          <title>{tag.played} {tag.type.label} tags played</title>\r\n        </rect>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagCircle;\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport ProductionBox from \"../resources/ProductionBox\";\r\nimport ResourceAndProductionBoxes\r\n  from \"../resources/ResourceAndProductionBoxes\";\r\nimport TagCircle from \"../resources/TagCircle\";\r\n\r\nclass Player extends Component {\r\n  static getSize() {\r\n\t\treturn {\r\n    \twidth: (\r\n    \t  100\r\n        + 25 * GameService.resources.length\r\n        + (GameService.tags.length % Math.ceil(GameService.tags.length / 2) + 1) * 25\r\n      ),\r\n      height: 50,\r\n    };\r\n  }\r\n\r\n\tselectPlayer = () => {\r\n  \tthis.props.control.selectPlayer(this.props.player);\r\n  };\r\n\trender() {\r\n  \tconst {player, offset} = this.props;\r\n    const size = this.constructor.getSize();\r\n  \treturn (\r\n    \t<g transform={`translate(${offset.x}, ${offset.y})`}>\r\n    \t  <rect\r\n          x={0} y={0} width={size.width} height={size.height}\r\n          fill={player.colour} fillOpacity={player.active ? undefined : 0.4}\r\n          stroke={'black'} strokeWidth={2}\r\n          onClick={this.selectPlayer}\r\n          className={player.active ? undefined : 'clickable'}\r\n        />\r\n        <text\r\n          x={10} y={20}\r\n          fill={player.fontColour} style={{pointerEvents: 'none'}}\r\n        >\r\n          Player #{player.id}\r\n        </text>\r\n        <ProductionBox offset={{x: 100, y: 0}} resource={player.resources.tr} />\r\n        {GameService.resources.filter(resource => resource.name !== 'tr').map((resource, index) => (\r\n\t        <ResourceAndProductionBoxes\r\n            key={resource.name}\r\n            offset={{x: 100 + 25 * (index + 1), y: 0}}\r\n            resource={player.resources[resource.name]}\r\n          />\r\n        ))}\r\n        {GameService.tags.map((tag, index) => (\r\n\t        <TagCircle\r\n            key={tag.name}\r\n            offset={{\r\n            \tx: (\r\n            \t  100\r\n                + 25 * GameService.resources.length\r\n                + (index % Math.ceil(GameService.tags.length / 2)) * 25\r\n              ),\r\n              y: (\r\n                25 * Math.floor(index / Math.ceil(GameService.tags.length / 2))\r\n              ),\r\n            }}\r\n            tag={player.tags[tag.name]}\r\n          />\r\n        ))}\r\n    \t</g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, {Component} from \"react\";\r\nimport Player from \"./Player\";\r\n\r\nclass Players extends Component {\r\n  static getSize(players) {\r\n    const playerSize = Player.getSize();\r\n    return {\r\n      width: playerSize.width,\r\n      height: playerSize.height * players.length + 10 * (players.length - 1),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {players, offset, control} = this.props;\r\n    const playerSize = Player.getSize();\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {players.map((player, index) =>\r\n          <Player\r\n            key={player.id}\r\n            offset={{x: 0, y: (playerSize.height + 10) * index}}\r\n            player={player}\r\n            control={control}\r\n          />\r\n        )}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Players;\r\n","import React, {Component} from \"react\";\r\n\r\nclass RightArrow extends Component {\r\n  static path = (\r\n    \"M15.375,7L10,2.54C9.695,2.287,9.461,2,9,2C8.375,2,8,2.516,8\" +\r\n    \",3v3H1C0.45,6,0,6.45,0,7v2c0,0.55,0.45,1,1,1h7v3  c0,0.484\" +\r\n    \",0.375,1,1,1c0.461,0,0.695-0.287,1-0.54L15.375,9C15.758\" +\r\n    \",8.688,16,8.445,16,8S15.758,7.313,15.375,7z\"\r\n  );\r\n\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <path\r\n        transform={`translate(${offset.x}, ${offset.y - 5})`}\r\n        d={this.constructor.path}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RightArrow;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Ocean extends Component {\r\n  static path = [\r\n    <path fill={'cyan'} stroke={'black'} d={`\r\n      M 14.57076 20.5262\r\n      H 4.85664\r\n      L 0 12.11376\r\n      L 4.85664 3.70132\r\n      h 9.714120000000001\r\n      l 4.85676 8.41248\r\n      L 14.57076 20.5262\r\n      z \r\n    `}/>,\r\n    <path d={`\r\n      M 9.41 14.7708\r\n      c -1.35516 0 -2.03164 -0.3766 -2.73736 -0.77532\r\n      C 5.92216 13.571399999999999 5.08 13.0908 3.44 13.0908\r\n      v 1\r\n      c 1.36 0 2.03504 0.3766 2.74068 0.77532\r\n      c 0.75056 0.42408 1.6112000000000002 0.90468 3.2293200000000004 0.90468\r\n      s 2.47044 -0.48064 3.221 -0.90468\r\n      C 13.336599999999999 14.4674 14 14.0908 15.36 14.0908\r\n      v -1\r\n      c -1.6400000000000001 0 -2.4704800000000002 0.48064 -3.221 0.90468\r\n      C 11.433319999999998 14.394160000000001 10.765160000000002 14.7708 9.41 14.7708\r\n      z \r\n      M 12.139000000000001 11.95548\r\n      c -0.70568 0.39872 -1.3771600000000002 0.77532 -2.7323200000000005 0.77532\r\n      s -2.0300000000000002 -0.3766 -2.73568 -0.77532\r\n      C 5.920520000000001 11.5314 5.08 11.050799999999999 3.44 11.050799999999999\r\n      v 1\r\n      c 1.36 0 2.03504 0.3766 2.74068 0.77532\r\n      c 0.75056 0.42408 1.6112000000000002 0.90468 3.2293200000000004 0.90468\r\n      s 2.47044 -0.48064 3.221 -0.90468\r\n      C 13.336599999999999 12.4274 14 12.050799999999999 15.36 12.050799999999999\r\n      v -1\r\n      C 13.72 11.050799999999999 12.889520000000001 11.5314 12.139000000000001 11.95548\r\n      z \r\n      M 9.41336 11.733200000000002\r\n      c 0.95132 0 1.72252 -0.77156 1.72252 -1.72256\r\n      c 0 -1.42876 -1.72252 -3.4614 -1.72252 -3.4614\r\n      s -1.72256 2.0326400000000002 -1.72256 3.4614\r\n      C 7.690799999999999 10.961640000000001 8.46204 11.733200000000002 9.41336 11.733200000000002\r\n      z\r\n    `} />,\r\n  ];\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ocean;\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport ResourceBox from \"../resources/ResourceBox\";\r\nimport RightArrow from \"../draw/RightArrow\";\r\nimport Ocean from \"../draw/Ocean\";\r\n\r\nclass AquiferStandardProject extends Component {\r\n  canPurchase() {\r\n    return GameService.canPurchase(this.props.activePlayer, this.props.project);\r\n  }\r\n\r\n  purchase = () => {\r\n    this.props.control.purchaseProject(this.props.activePlayer, this.props.project);\r\n  };\r\n\r\n  render() {\r\n    const {offset, project} = this.props;\r\n    const canPurchase = this.canPurchase();\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <ResourceBox\r\n          resource={{\r\n            value: -project.cost.money.value,\r\n            type: GameService.resourcesByName.money\r\n          }}\r\n          offset={{x: 0, y: 0}}\r\n        />\r\n        <RightArrow offset={{x: 25, y: 10}}/>\r\n        <Ocean offset={{x: 50, y: 0}}/>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'yellow'} fillOpacity={canPurchase ? undefined : 0.4}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n        <text x={110} y={20} fill={'black'}>Aquifer</text>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'transparent'}\r\n          className={canPurchase ? 'clickable' : undefined}\r\n          onClick={canPurchase ? this.purchase : null}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\nGameService.standardProjectsByName.aquifer.component = AquiferStandardProject;\r\n\r\nexport default AquiferStandardProject\r\n","import React, {Component} from 'react';\r\n\r\nclass TemperatureGauge extends Component {\r\n  static path = [\r\n    <path fill={'red'} stroke={'black'} d={`\r\n      M 10.19185 12.5282\r\n      c -0.03025 -0.019450000000000002 -0.09175 -0.05605 -0.09175 -0.14770000000000003\r\n      V 4.1299\r\n      C 10.100100000000001 2.95545 9.14465 2 7.970300000000001 2\r\n      C 6.7959000000000005 2 5.840450000000001 2.95545 5.840450000000001 4.1299\r\n      v 8.2589\r\n      c 0 0.0771 -0.06185000000000001 0.12025 -0.09235 0.13985\r\n      c -1.1736000000000002 0.75365 -1.8897 2.05045 -1.8897 3.4597499999999997\r\n      c 0 2.2674 1.8446000000000002 4.112 4.1119 4.112\r\n      c 2.26735 0 4.1119 -1.8446500000000001 4.1119 -4.112\r\n      C 12.0822 14.578800000000001 11.36585 13.28185 10.19185 12.5282\r\n      z \r\n    `} />,\r\n    <path d={`\r\n      M 7.970300000000001 19.3504\r\n      c -1.8537500000000002 0 -3.3619000000000003 -1.5082000000000002 -3.3619000000000003 -3.362\r\n      c 0 -1.24465 0.68335 -2.38215 1.78345 -2.9685\r\n      l 0.046150000000000004 -0.0246\r\n      c 0 0 0.15245 -0.06065000000000001 0.15245 -0.30435\r\n      c 0 -2.1403 0 -8.56105 0 -8.56105\r\n      C 6.59045 3.3689999999999998 7.2094000000000005 2.75 7.970300000000001 2.75\r\n      c 0.76085 0 1.3798000000000001 0.6190000000000001 1.3798000000000001 1.3799000000000001\r\n      c 0 0 0 6.4231 0 8.564100000000002\r\n      c 0 0.24065 0.16175 0.30625 0.16175 0.30625\r\n      l 0.03685 0.01965\r\n      c 1.1001 0.58635 1.7835 1.7238 1.7835 2.9685\r\n      C 11.3322 17.8422 9.82405 19.3504 7.970300000000001 19.3504\r\n      z \r\n      M 8.6325 14.40705\r\n      c -0.03685 -0.013950000000000002 -0.11220000000000002 -0.036950000000000004 -0.11220000000000002 -0.16195\r\n      V 5.7743\r\n      c 0 -0.30375 -0.24625 -0.55 -0.55 -0.55\r\n      c -0.30375 0 -0.55 0.24625 -0.55 0.55\r\n      v 8.47075\r\n      c 0 0.12085 -0.08275 0.1506 -0.12315000000000001 0.16615000000000002\r\n      c -0.70225 0.27105 -1.20185 0.9531499999999999 -1.20185 1.7499\r\n      c 0 1.0339 0.8411 1.875 1.875 1.875\r\n      c 1.0339 0 1.875 -0.8411 1.875 -1.875\r\n      C 9.845300000000002 15.360300000000002 9.3405 14.67525 8.6325 14.40705\r\n      z \r\n      M 13.6669 4.2743\r\n      h 2.95175\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.13435 0.30000000000000004 -0.30000000000000004\r\n      c 0 -0.16565000000000002 -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -2.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      C 13.366900000000001 4.140000000000001 13.5012 4.2743 13.6669 4.2743\r\n      z \r\n      M 13.6669 6.2076\r\n      h 3.95175\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.13435 0.30000000000000004 -0.30000000000000004\r\n      c 0 -0.16565000000000002 -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -3.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      C 13.366900000000001 6.0733 13.5012 6.2076 13.6669 6.2076\r\n      z \r\n      M 13.6669 6.2076\r\n      h 3.95175\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.13435 0.30000000000000004 -0.30000000000000004\r\n      c 0 -0.16565000000000002 -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -3.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      C 13.366900000000001 6.0733 13.5012 6.2076 13.6669 6.2076\r\n      z \r\n      M 13.6669 8.1409\r\n      h 2.95175\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.13435 0.30000000000000004 -0.30000000000000004\r\n      s -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -2.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      S 13.5012 8.1409 13.6669 8.1409\r\n      z \r\n      M 17.618650000000002 10.0743\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.1343 0.30000000000000004 -0.30000000000000004\r\n      c 0 -0.16565000000000002 -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -3.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      c 0 0.16570000000000001 0.13435 0.30000000000000004 0.30000000000000004 0.30000000000000004\r\n      H 17.618650000000002\r\n      z \r\n      M 18.1105 15.468600000000002\r\n      l -1.7357500000000003 -2.24595\r\n      c -0.12140000000000001 -0.15700000000000003 -0.29705 -0.24705 -0.48200000000000004 -0.24705\r\n      c -0.1849 0 -0.36060000000000003 0.09010000000000001 -0.48200000000000004 0.24710000000000001\r\n      l -1.7357500000000003 2.2458500000000003\r\n      c -0.13675 0.17695000000000002 -0.1686 0.3735 -0.08725000000000001 0.5392\r\n      c 0.0814 0.16570000000000001 0.25630000000000003 0.26080000000000003 0.48 0.26080000000000003\r\n      h 0.4093\r\n      c 0.054200000000000005 0 0.1 0.04580000000000001 0.1 0.1\r\n      v 2.4640500000000003\r\n      c 0 0.386 0.31400000000000006 0.7000000000000001 0.7000000000000001 0.7000000000000001\r\n      h 1.1347500000000001\r\n      c 0.386 0 0.7000000000000001 -0.31400000000000006 0.7000000000000001 -0.7000000000000001\r\n      v -2.4640500000000003\r\n      c 0 -0.054200000000000005 0.04580000000000001 -0.1 0.1 -0.1\r\n      h 0.50595\r\n      c 0.2237 0 0.39860000000000007 -0.09505000000000001 0.48 -0.26080000000000003\r\n      C 18.2791 15.84205 18.24725 15.645500000000002 18.1105 15.468600000000002\r\n      z \r\n      M 17.43495 15.66855\r\n      c -0.05575 0 -0.22315000000000002 0 -0.22315000000000002 0\r\n      c -0.386 0 -0.7000000000000001 0.31400000000000006 -0.7000000000000001 0.7000000000000001\r\n      v 2.4640500000000003\r\n      c 0 0.054200000000000005 -0.04580000000000001 0.1 -0.1 0.1\r\n      h -1.1347500000000001\r\n      c -0.054200000000000005 0 -0.1 -0.04580000000000001 -0.1 -0.1\r\n      v -2.4640500000000003\r\n      c 0 -0.386 -0.31400000000000006 -0.7000000000000001 -0.7000000000000001 -0.7000000000000001\r\n      c 0 0 -0.10420000000000001 0 -0.13895 0\r\n      c -0.057050000000000003 0 -0.03545 -0.030850000000000002 -0.03545 -0.030850000000000002\r\n      l 1.5053 -1.9476500000000003\r\n      c 0 0 0.0419 -0.052300000000000006 0.08485000000000001 -0.052300000000000006\r\n      c 0.04530000000000001 0 0.08750000000000001 0.05560000000000001 0.08750000000000001 0.05560000000000001\r\n      l 1.4999500000000001 1.9409\r\n      C 17.4802 15.6343 17.5076 15.66855 17.43495 15.66855\r\n      z\r\n    `} />,\r\n  ];\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemperatureGauge\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport ResourceBox from \"../resources/ResourceBox\";\r\nimport RightArrow from \"../draw/RightArrow\";\r\nimport TemperatureGauge from \"../draw/TemperatureGauge\";\r\n\r\nclass AsteroidStandardProject extends Component {\r\n  canPurchase() {\r\n    return GameService.canPurchase(this.props.activePlayer, this.props.project);\r\n  }\r\n\r\n  purchase = () => {\r\n    this.props.control.purchaseProject(this.props.activePlayer, this.props.project);\r\n  };\r\n\r\n  render() {\r\n    const {offset, project} = this.props;\r\n    const canPurchase = this.canPurchase();\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <ResourceBox\r\n          resource={{\r\n            value: -project.cost.money.value,\r\n            type: GameService.resourcesByName.money\r\n          }}\r\n          offset={{x: 0, y: 0}}\r\n        />\r\n        <RightArrow offset={{x: 25, y: 10}}/>\r\n        <TemperatureGauge offset={{x: 50, y: 0}}/>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'yellow'} fillOpacity={canPurchase ? undefined : 0.4}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n        <text x={110} y={20} fill={'black'}>Asteroid</text>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'transparent'}\r\n          className={canPurchase ? 'clickable' : undefined}\r\n          onClick={canPurchase ? this.purchase : null}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\nGameService.standardProjectsByName.asteroid.component = AsteroidStandardProject;\r\n\r\nexport default AsteroidStandardProject\r\n","import React, {Component} from \"react\";\r\n\r\nclass City extends Component {\r\n  static path = [\r\n    <path fill={'grey'} stroke={'black'} d={`\r\n      M 14.57076 20.5262\r\n      H 4.85664\r\n      L 0 12.11376\r\n      L 4.85664 3.70132\r\n      h 9.714120000000001\r\n      l 4.85676 8.41248\r\n      L 14.57076 20.5262\r\n      z \r\n    `}/>,\r\n    <path d={`\r\n      M 5.05 11.530275\r\n      h 2.25\r\n      v 0.5\r\n      h -2.25\r\n      v -0.5\r\n      M 5.05 12.805275000000002\r\n      h 2.25\r\n      v 0.5\r\n      h -2.25\r\n      v -0.5\r\n      M 13.96625 6.255275\r\n      h -1.84655\r\n      c -0.43135000000000007 0 -0.7947000000000001 0.35192500000000004 -0.7947000000000001 0.78325\r\n      v 5.64175\r\n      H 8.350000000000001\r\n      v -1.7991000000000001\r\n      c 0 -0.422825 -0.35000000000000003 -0.76815 -0.775 -0.781625\r\n      v -0.64895\r\n      c 0.00425 -0.4211750000000001 -0.33372500000000005 -0.7660750000000001 -0.7549000000000001 -0.770325\r\n      c -0.005025000000000001 -0.00005 -0.010075 -0.00005 -0.0151 0\r\n      H 6.425000000000001\r\n      V 8.12475\r\n      c 0.5590499999999999 -0.138075 0.9003000000000001 -0.7032 0.762225 -1.262225\r\n      C 7.049175 6.303475 6.48405 5.9622 5.925 6.100275\r\n      S 5.0247 6.803475000000001 5.162775 7.3625\r\n      C 5.2556 7.7384 5.5491 8.0319 5.925 8.12475\r\n      v 0.555525\r\n      H 5.540625\r\n      C 5.1093 8.680275 4.75 9.01925 4.75 9.4506\r\n      v 0.64895\r\n      c -0.4 0.013475 -0.75 0.35877500000000007 -0.75 0.781625\r\n      v 5.5577250000000005\r\n      c 0.001425 0.1348 0.11185 0.2429 0.24665 0.24147500000000002\r\n      c 0.0016250000000000001 -0.000025 0.0032250000000000004 -0.00005 0.00485 -0.0001\r\n      h 10.247\r\n      c 0.134725 0.0041 0.2473 -0.101775 0.2514 -0.236525\r\n      c 0.00005 -0.0016250000000000001 0.00007500000000000001 -0.0032250000000000004 0.0001 -0.00485\r\n      V 7.038525\r\n      C 14.748875 6.6062 14.39855 6.2561 13.96625 6.255275\r\n      z \r\n      M 5.630975 7.11345\r\n      c 0 -0.29925 0.24257499999999999 -0.541825 0.541825 -0.541825\r\n      s 0.541825 0.24257499999999999 0.541825 0.541825\r\n      c 0 0.29925 -0.24257499999999999 0.541825 -0.541825 0.541825\r\n      C 5.8736999999999995 7.6549 5.63135 7.4125250000000005 5.630975 7.11345\r\n      z \r\n      M 5.25 9.4506\r\n      c 0 -0.15565 0.135 -0.27032500000000004 0.290625 -0.27032500000000004\r\n      H 6.805\r\n      c 0.144925 -0.004200000000000001 0.2658 0.10985 0.27 0.25477500000000003\r\n      c 0.00015000000000000001 0.005175 0.00015000000000000001 0.010375 0 0.015550000000000001\r\n      v 0.6546750000000001\r\n      H 5.25\r\n      V 9.4506\r\n      z \r\n      M 6.625 16.180275\r\n      H 5.725\r\n      v -1.425\r\n      h 0.9\r\n      V 16.180275\r\n      z \r\n      M 7.85 16.180275\r\n      h -0.7250000000000001\r\n      v -1.685975\r\n      c 0 -0.138075 -0.115475 -0.23902500000000002 -0.25355 -0.23902500000000002\r\n      H 5.47415\r\n      c -0.138075 0 -0.24914999999999998 0.10095000000000001 -0.24914999999999998 0.23902500000000002\r\n      v 1.685975\r\n      H 4.5\r\n      V 10.881175\r\n      c 0.0014000000000000002 -0.15380000000000002 0.1272 -0.277325 0.281 -0.27595000000000003\r\n      c 0.000925 0 0.00185 0.000025 0.0027500000000000003 0.00005\r\n      h 2.7781000000000002\r\n      c 0.1557 -0.0032500000000000003 0.28465 0.1202 0.28815 0.2759\r\n      V 16.180275\r\n      z \r\n      M 10.3 16.180275\r\n      h -0.925\r\n      v -0.7000000000000001\r\n      h 0.925\r\n      V 16.180275\r\n      z \r\n      M 11.325 16.180275\r\n      h -0.525\r\n      v -0.940725\r\n      c -0.004200000000000001 -0.141925 -0.11865000000000002 -0.25577500000000003 -0.260575 -0.25927500000000003\r\n      h -1.40895\r\n      c -0.140925 0.0039000000000000003 -0.25365000000000004 0.11830000000000002 -0.255475 0.25927500000000003\r\n      v 0.940725\r\n      h -0.525\r\n      v -3\r\n      h 2.975\r\n      V 16.180275\r\n      z \r\n      M 14.25 16.180275\r\n      h -2.4250000000000003\r\n      v -1.3250000000000002\r\n      h 2.4250000000000003\r\n      V 16.180275\r\n      z \r\n      M 14.25 14.355275\r\n      h -2.4250000000000003\r\n      v -0.65\r\n      h 2.4250000000000003\r\n      V 14.355275\r\n      z \r\n      M 14.25 13.205275\r\n      h -2.4250000000000003\r\n      v -0.675\r\n      h 2.4250000000000003\r\n      V 13.205275\r\n      z \r\n      M 14.25 12.030275\r\n      h -2.4250000000000003\r\n      v -0.675\r\n      h 2.4250000000000003\r\n      V 12.030275\r\n      z \r\n      M 14.25 10.855275\r\n      h -2.4250000000000003\r\n      v -0.65\r\n      h 2.4250000000000003\r\n      V 10.855275\r\n      z \r\n      M 14.25 9.705275\r\n      h -2.4250000000000003\r\n      v -0.675\r\n      h 2.4250000000000003\r\n      V 9.705275\r\n      z \r\n      M 14.25 8.530275\r\n      h -2.4250000000000003\r\n      v -0.65\r\n      h 2.4250000000000003\r\n      V 8.530275\r\n      z \r\n      M 14.25 7.380275\r\n      h -2.4250000000000003\r\n      v -0.34175\r\n      c 0 -0.15575000000000003 0.13905 -0.28325 0.2947 -0.28325\r\n      h 1.84655\r\n      c 0.1563 0.0005250000000000001 0.28295 0.12695 0.28375 0.28325\r\n      V 7.380275\r\n      z\r\n    `}/>,\r\n  ];\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default City;\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport ResourceBox from \"../resources/ResourceBox\";\r\nimport RightArrow from \"../draw/RightArrow\";\r\nimport City from \"../draw/City\";\r\nimport ProductionBox from \"../resources/ProductionBox\";\r\n\r\nclass CityStandardProject extends Component {\r\n  canPurchase() {\r\n    return GameService.canPurchase(this.props.activePlayer, this.props.project);\r\n  }\r\n\r\n  purchase = () => {\r\n    this.props.control.purchaseProject(this.props.activePlayer, this.props.project);\r\n  };\r\n\r\n  render() {\r\n    const {offset, project} = this.props;\r\n    const canPurchase = this.canPurchase();\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <ResourceBox\r\n          resource={{\r\n            value: -project.cost.money.value,\r\n            type: GameService.resourcesByName.money\r\n          }}\r\n          offset={{x: 0, y: 0}}\r\n        />\r\n        <RightArrow offset={{x: 25, y: 10}}/>\r\n        <City offset={{x: 50, y: 0}}/>\r\n        <ProductionBox\r\n          resource={{\r\n            production: project.benefit.money.production,\r\n            type: GameService.resourcesByName.money\r\n          }}\r\n          offset={{x: 75, y: 0}}\r\n        />\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'yellow'} fillOpacity={canPurchase ? undefined : 0.4}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n        <text x={110} y={20} fill={'black'}>City</text>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'transparent'}\r\n          className={canPurchase ? 'clickable' : undefined}\r\n          onClick={canPurchase ? this.purchase : null}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\nGameService.standardProjectsByName.city.component = CityStandardProject;\r\n\r\nexport default CityStandardProject\r\n","import React, {Component} from \"react\";\r\n\r\nclass Greenery extends Component {\r\n  static path = [\r\n    <path fill={'green'} stroke={'black'} d={`\r\n      M 14.57076 20.5262\r\n      H 4.85664\r\n      L 0 12.11376\r\n      L 4.85664 3.70132\r\n      h 9.714120000000001\r\n      l 4.85676 8.41248\r\n      L 14.57076 20.5262\r\n      z \r\n    `}/>,\r\n    <path d={`\r\n      M 14.054540000000001 9.78147\r\n      c 0.015750000000000004 -0.111265 0.02443 -0.22480500000000003 0.02443 -0.34034000000000003\r\n      c 0 -1.3324500000000001 -1.0840200000000002 -2.4164700000000003 -2.4164700000000003 -2.4164700000000003\r\n      c -0.598465 0 -1.146355 0.21913500000000002 -1.5688750000000002 0.5807900000000001\r\n      C 9.576080000000001 6.650195 8.564545 6 7.40391 6\r\n      C 5.718345 6 4.3470450000000005 7.3713 4.3470450000000005 9.056865\r\n      c 0 0.7694050000000001 0.285845 1.4732550000000002 0.75677 2.0111700000000003\r\n      c -0.33285000000000003 0.41415500000000005 -0.532665 0.9395400000000002 -0.532665 1.510985\r\n      c 0 1.3324500000000001 1.0840200000000002 2.4164700000000003 2.4164700000000003 2.4164700000000003\r\n      c 0.5328050000000001 0 1.025605 -0.17367000000000002 1.42555 -0.46693500000000004\r\n      v 3.0678550000000007\r\n      c 0 0.09649500000000001 -0.07805000000000001 0.17500000000000002 -0.17398500000000003 0.17500000000000002\r\n      h -0.8750000000000001\r\n      c -0.29004500000000005 0 -0.526015 0.23551500000000003 -0.526015 0.525\r\n      v 0.24500000000000002\r\n      c 0 0.28948500000000005 0.23597 0.525 0.526015 0.525\r\n      h 3.7450000000000006\r\n      c 0.28892500000000004 0 0.523985 -0.23551500000000003 0.523985 -0.525\r\n      v -0.24500000000000002\r\n      c 0 -0.28948500000000005 -0.23506000000000002 -0.525 -0.523985 -0.525\r\n      h -0.8750000000000001\r\n      c -0.09541000000000001 0 -0.176015 -0.08015000000000001 -0.176015 -0.17500000000000002\r\n      v -3.3129950000000004\r\n      c 0.46665500000000004 0.28889000000000004 1.0162950000000002 0.45591000000000004 1.6042950000000002 0.45591000000000004\r\n      c 1.6855650000000002 0 3.056865 -1.3713000000000002 3.056865 -3.056865\r\n      C 14.719365000000002 10.964504999999999 14.470445 10.30367 14.054540000000001 9.78147\r\n      z\r\n    `}/>,\r\n  ];\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Greenery;\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport ResourceBox from \"../resources/ResourceBox\";\r\nimport RightArrow from \"../draw/RightArrow\";\r\nimport Greenery from \"../draw/Greenery\";\r\n\r\nclass GreeneryStandardProject extends Component {\r\n  canPurchase() {\r\n    return GameService.canPurchase(this.props.activePlayer, this.props.project);\r\n  }\r\n\r\n  purchase = () => {\r\n    this.props.control.purchaseProject(this.props.activePlayer, this.props.project);\r\n  };\r\n\r\n  render() {\r\n    const {offset, project} = this.props;\r\n    const canPurchase = this.canPurchase();\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <ResourceBox\r\n          resource={{\r\n            value: -project.cost.money.value,\r\n            type: GameService.resourcesByName.money\r\n          }}\r\n          offset={{x: 0, y: 0}}\r\n        />\r\n        <RightArrow offset={{x: 25, y: 10}}/>\r\n        <Greenery offset={{x: 50, y: 0}}/>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'yellow'} fillOpacity={canPurchase ? undefined : 0.4}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n        <text x={110} y={20} fill={'black'}>Greenery</text>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'transparent'}\r\n          className={canPurchase ? 'clickable' : undefined}\r\n          onClick={canPurchase ? this.purchase : null}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\nGameService.standardProjectsByName.greenery.component = GreeneryStandardProject;\r\n\r\nexport default GreeneryStandardProject\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport ResourceBox from \"../resources/ResourceBox\";\r\nimport RightArrow from \"../draw/RightArrow\";\r\nimport ProductionBox from \"../resources/ProductionBox\";\r\n\r\nclass PowerPlantStandardProject extends Component {\r\n  canPurchase() {\r\n    return GameService.canPurchase(this.props.activePlayer, this.props.project);\r\n  }\r\n\r\n  purchase = () => {\r\n    this.props.control.purchaseProject(this.props.activePlayer, this.props.project);\r\n  };\r\n\r\n  render() {\r\n    const {offset, project} = this.props;\r\n    const canPurchase = this.canPurchase();\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <ResourceBox\r\n          resource={{\r\n            value: -project.cost.money.value,\r\n            type: GameService.resourcesByName.money\r\n          }}\r\n          offset={{x: 0, y: 0}}\r\n        />\r\n        <RightArrow offset={{x: 25, y: 10}}/>\r\n        <ProductionBox\r\n          resource={{\r\n            production: project.benefit.energy.production,\r\n            type: GameService.resourcesByName.energy\r\n          }}\r\n          offset={{x: 50, y: 0}}\r\n        />\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'yellow'} fillOpacity={canPurchase ? undefined : 0.4}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n        <text x={110} y={20} fill={'black'}>Power Plant</text>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'transparent'}\r\n          className={canPurchase ? 'clickable' : undefined}\r\n          onClick={canPurchase ? this.purchase : null}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\nGameService.standardProjectsByName.powerPlant.component = PowerPlantStandardProject;\r\n\r\nexport default PowerPlantStandardProject\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport './AquiferStandardProject';\r\nimport './AsteroidStandardProject';\r\nimport './CityStandardProject';\r\nimport './GreeneryStandardProject';\r\nimport './PowerPlantStandardProject';\r\n\r\nclass StandardProjects extends Component {\r\n  static getSize(game) {\r\n    return {width: 250, height: 310};\r\n  }\r\n\r\n  render() {\r\n    const {offset, game, control} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <rect\r\n          x={0} y={10} width={250} height={300}\r\n          fill={'silver'}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n\r\n        <rect\r\n          x={10} y={0} width={130} height={25}\r\n          fill={'yellow'}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n        <text x={20} y={20} fill={'black'}>Standard Projects</text>\r\n\r\n        {GameService.standardProjects.map((project, index) => (\r\n          <project.component\r\n            key={index}\r\n            offset={{x: 10, y: 35 + 25 * index}}\r\n            activePlayer={game.activePlayer} project={project}\r\n            control={control}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StandardProjects;\r\n","import React, {Component} from \"react\";\r\n\r\nclass GlobalParameter extends Component {\r\n  static getSize(parameter) {\r\n    return {\r\n      width: 200,\r\n      height: 30,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {offset, parameter} = this.props;\r\n    const globalParametersSize = this.constructor.getSize(parameter);\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <rect\r\n          x={0} y={0}\r\n          width={globalParametersSize.width}\r\n          height={globalParametersSize.height}\r\n        >\r\n          <title>{parameter.label}: {parameter.value}/{parameter.maxValue}</title>\r\n        </rect>\r\n        <mask x={0} y={0} id={`globalParameterMask-${parameter.name}`}>\r\n          <rect\r\n            x={0} y={0}\r\n            width={globalParametersSize.width * parameter.value / parameter.maxValue}\r\n            height={globalParametersSize.height}\r\n            fill={'white'}\r\n          />\r\n        </mask>\r\n        <rect\r\n          x={0} y={0}\r\n          width={globalParametersSize.width}\r\n          height={globalParametersSize.height}\r\n          style={{pointerEvents: 'none'}}\r\n          fill={`url(#${GlobalParameterDef.getXlinkHref(parameter)})`}\r\n          mask={`url(#globalParameterMask-${parameter.name})`}\r\n        />\r\n        <text\r\n          x={10} y={20}\r\n          fill={'white'}\r\n          style={{pointerEvents: 'none'}}\r\n        >\r\n          {parameter.label}: {parameter.getLabel(parameter)}\r\n          ({parameter.value}/{parameter.maxValue})\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nclass GlobalParameterDef extends Component {\r\n  static getXlinkHref(parameter) {\r\n    return `globalParameterGradient-${parameter.name}`;\r\n  }\r\n\r\n  render() {\r\n    const {parameter} = this.props;\r\n    return (\r\n      <linearGradient\r\n        id={this.constructor.getXlinkHref(parameter)} \r\n      >\r\n        <stop offset={\"5%\"}  stopColor={parameter.emptyColour} />\r\n        <stop offset={\"95%\"} stopColor={parameter.fullColour} />\r\n      </linearGradient>\r\n    );\r\n  }\r\n}\r\nGlobalParameter.Def = GlobalParameterDef;\r\n\r\nexport default GlobalParameter;\r\n","import React, {Component} from \"react\";\r\nimport GlobalParameter from \"./GlobalParameter\";\r\nimport GameService from \"../../game/GameService\";\r\n\r\nclass GlobalParameters extends Component {\r\n  static columnsPerRow = 2;\r\n  static getSize(parameters) {\r\n    const globalParameterSize = GlobalParameter.getSize(null);\r\n    const rows = Math.ceil(parameters.length / this.columnsPerRow);\r\n    return {\r\n      width: this.columnsPerRow * globalParameterSize.width,\r\n      height: rows * globalParameterSize.height + Math.max(0, rows - 1) * 10,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {offset, parameters} = this.props;\r\n    const globalParameterSize = GlobalParameter.getSize(null);\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {parameters.map((parameter, index) => {\r\n          const column = index % this.constructor.columnsPerRow;\r\n          const row = Math.floor(index / this.constructor.columnsPerRow);\r\n          return (\r\n            <GlobalParameter\r\n              offset={{\r\n                x: column * (globalParameterSize.width + 10),\r\n                y: row * (globalParameterSize.height + 10),\r\n              }}\r\n              key={parameter.name}\r\n              parameter={parameter}\r\n            />\r\n          );\r\n        })}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nclass GlobalParametersDefs extends Component {\r\n  render() {\r\n    return GameService.globalParameters.map(parameter => (\r\n      <GlobalParameter.Def key={parameter.name} parameter={parameter}/>\r\n    ));\r\n  }\r\n}\r\nGlobalParameters.Defs = GlobalParametersDefs;\r\n\r\nexport default GlobalParameters;\r\n","import React, {Component} from \"react\";\r\nimport Board from \"./board/Board\";\r\nimport Players from \"./players/Players\";\r\nimport StandardProjects from \"./projects/StandardProjects\";\r\nimport GlobalParameters from \"./parameters/GlobalParameters\";\r\nimport DefaultHexagon from \"./draw/DefaultHexagon\";\r\n\r\nclass Game extends Component {\r\n  static getSize(game) {\r\n    const boardSize = Board.getSize(game.board);\r\n    const playersSize = Players.getSize(game.players);\r\n    const standardProjectsSize = StandardProjects.getSize(game);\r\n    return {\r\n      width: 10 + Math.max(boardSize.width, playersSize.width, standardProjectsSize.width) + 10,\r\n      height: 10 + boardSize.height + 20 + playersSize.height + 20 + standardProjectsSize.height + 10,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {game, control} = this.props;\r\n    const gameSize = this.constructor.getSize(game);\r\n    const globalParametersSize = GlobalParameters.getSize(game.globalParameters);\r\n    const boardSize = Board.getSize(game.board);\r\n    const playersSize = Players.getSize(game.players);\r\n    return (\r\n      <svg width={gameSize.width} height={gameSize.height}>\r\n        <defs>\r\n          <GlobalParameters.Defs />\r\n          <DefaultHexagon.Def/>\r\n        </defs>\r\n        <GlobalParameters\r\n          parameters={game.globalParameters}\r\n          offset={{x: 10, y: 10}}\r\n        />\r\n        <Board\r\n          board={game.board}\r\n          offset={{x: 10, y: 10 + globalParametersSize.height + 20}}\r\n        />\r\n        <Players\r\n          offset={{\r\n            x: 10,\r\n            y: 10 + globalParametersSize.height + 20 + boardSize.height + 20,\r\n          }}\r\n          players={game.players}\r\n          control={control}\r\n        />\r\n        <StandardProjects\r\n          offset={{\r\n            x: 10,\r\n            y: 10 + globalParametersSize.height + 20 + boardSize.height + 20 + playersSize.height + 20\r\n          }}\r\n          game={game}\r\n          control={control}\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import GameService from \"./GameService\";\r\n\r\nclass GameControl {\r\n  constructor(update) {\r\n    this.update = update;\r\n  }\r\n\r\n  selectPlayer(player) {\r\n    this.update(game => ({\r\n      game: {\r\n        ...game,\r\n        activePlayer: player,\r\n        players: game.players.map(otherPlayer => ({\r\n          ...otherPlayer,\r\n          active: otherPlayer.id === player.id,\r\n        })),\r\n      },\r\n    }));\r\n  }\r\n\r\n  purchaseProject(player, project) {\r\n    this.update(game => {\r\n      [player] = game.players\r\n        .filter(otherPlayer => otherPlayer.id === player.id);\r\n      if (!player) {\r\n        return null;\r\n      }\r\n      if (!player.active) {\r\n        return null;\r\n      }\r\n      const {newGame, newPlayer} = GameService.purchase(game, player, project);\r\n      if (newPlayer === player && newGame === game) {\r\n        return null;\r\n      }\r\n      return {\r\n        game: {\r\n          ...newGame,\r\n          players: newGame.players.map(otherPlayer =>\r\n            otherPlayer.id === newPlayer.id ? newPlayer : otherPlayer),\r\n        },\r\n      };\r\n    });\r\n    this.updateActivePlayer();\r\n  }\r\n\r\n  updateActivePlayer() {\r\n    this.update(game => {\r\n      let [activePlayer] = game.players.filter(player => player.active);\r\n      activePlayer = activePlayer || null;\r\n      if (activePlayer === game.activePlayer) {\r\n        return null;\r\n      }\r\n      return {\r\n        game: {\r\n          ...game,\r\n          activePlayer,\r\n        },\r\n      };\r\n    });\r\n  }\r\n}\r\n\r\nexport default GameControl;\r\n","import React, {Component, Fragment} from 'react';\nimport './App.css';\nimport GameService from \"./game/GameService\";\nimport Game from \"./components/Game\";\nimport GameControl from \"./game/GameControl\";\n\nclass App extends Component {\n\tstate = {\n    game: GameService.makeGame(),\n  };\n\n\tupdateGame = func => {\n\t  this.setState(({game}) => func(game));\n  };\n\n\tcontrol = new GameControl(this.updateGame);\n\n\trender() {\n  \tconst {game} = this.state;\n  \treturn (\n    \t<Fragment>\n    \t  Gaiaforming Ares\n        <br />\n      \t<Game game={game} control={this.control} />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
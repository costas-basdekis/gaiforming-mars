{"version":3,"sources":["game/GameService.js","utils/draw.js","utils/index.js","components/draw/Hexagon.js","components/draw/DefaultHexagon.js","components/board/Hex.js","components/draw/OceanIcon.js","components/draw/CityIcon.js","components/draw/OceanHex.js","components/draw/GreeneryHex.js","components/draw/CityHex.js","components/board/Board.js","components/resources/ProductionBox.js","components/resources/ResourceBox.js","components/resources/ResourceAndProductionBoxes.js","components/resources/TagCircle.js","components/players/Player.js","components/players/Players.js","components/draw/RightArrow.js","components/draw/GreeneryIcon.js","components/draw/TemperatureGauge.js","components/draw/Oxygen.js","components/projects/StandardProject.js","components/projects/StandardProjects.js","components/parameters/GlobalParameter.js","components/parameters/GlobalParameters.js","components/Game.js","game/GameControl.js","App.js","serviceWorker.js","index.js"],"names":["GameService","game","player","project","action","name","cost","hasOwnProperty","resources","resource","value","production","condition","conditions","globalParameters","oceans","temperature","Error","this","canPurchase","newPlayer","benefit","newGame","count","_","range","parameter","maxValue","map","globalParameter","Object","assign","indexBy","tiles","players","oldPlayer","id","tile","oceanOnly","content","canPlaceOcean","placementBonus","getPlacementBonus","board","row","otherTile","type","ownerId","owner","otherPlayer","money","canPlaceGreeneryRegardlessOfNeighbours","canPlaceGreeneryWithOwnNeighbour","canPlaceGreeneryWithOwnNeighbourAnywhere","canPlaceGreenery","flatten","filter","active","length","allowedCity","getNeighbours","canPlaceCity","bonus","oceanNeighbours","POSSIBLE_NEIGHBOURS_OFFSETS","dX","dY","y","x","areTilesNeighbours","lhs","rhs","Math","abs","playerCount","makeBoard","makeGlobalParameters","activePlayer","slice","makePlayer","ceil","boardOceans","boardCities","parameters","initialValue","object","makeResource","tags","tag","makeTag","hand","playedCards","initialProduction","played","cards","label","colour","fontColour","prefix","getLabel","emptyColour","fullColour","standardProjects","energy","tr","maxTemperature","ocean","maxOceans","oxygen","greenery","city","resourcesByName","standardProjectsByName","defaultBoardTileSize","getBoardTileMeasurements","size","longSize","shortSize","floor","sqrt","longOffset","shortOffset","getBoardTileOffsetFromPosition","draw","Hexagon","props","utils","position","stroke","fill","transform","undefined","points","constructor","getPointsString","strokeWidth","pointsStringBySize","ratio","join","Component","DefaultHexagon","className","onClick","xlinkHref","DefaultHexagonDef","Def","Hex","OceanIcon","offset","path","key","d","OceanIconDef","stopColor","CityIcon","CityDef","OceanHex","GreeneryHex","CityHex","Board","onPlaceOceanClick","control","placeOcean","onPlaceGreeneryClick","placeGreenery","onPlaceCityClick","placeCity","find","getBorder","width","height","activeTiles","TypeHex","tileComponents","getTileFillColour","ProductionBox","dominantBaseline","textAnchor","fontSize","ResourceBox","ResourceAndProductionBoxes","vertical","TagCircle","rx","ry","Player","selectPlayer","getSize","fillOpacity","style","pointerEvents","index","Players","playerSize","RightArrow","GreeneryIcon","TemperatureGauge","Oxygen","StandardProject","purchase","purchaseProject","globalParametersComponents","pairs","GlobalParameter","tilesComponents","benefits","resourceName","keys","productionOrValue","StandardProjects","globalParametersSize","GlobalParameterDef","getXlinkHref","mask","GlobalParameters","globalParameterSize","column","columnsPerRow","rows","max","GlobalParametersDefs","Defs","Game","gameSize","boardSize","playersSize","standardProjectsSize","GameControl","update","getPlayer","updateActivePlayer","getTile","App","state","makeGame","updateGame","func","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b414b548.chunk.js","sourcesContent":["import _ from \"underscore\";\r\n\r\nclass GameService {\r\n  static boardOceans = _.indexBy([\r\n    {x: 3, y: 0},\r\n    {x: 5, y: 0},\r\n    {x: 6, y: 0},\r\n    {x: 6, y: 1},\r\n    {x: 7, y: 3},\r\n    {x: 3, y: 4},\r\n    {x: 4, y: 4},\r\n    {x: 5, y: 4},\r\n    {x: 5, y: 5},\r\n    {x: 6, y: 5},\r\n    {x: 7, y: 5},\r\n    {x: 6, y: 8},\r\n  ], ({x, y}) => `${x},${y}`);\r\n  static boardCities = _.indexBy([\r\n    {x: 2, y: 4, name: 'noctis', label: 'Noctis'},\r\n    {x: 0, y: 0, name: 'phobos', label: 'Phobos'},\r\n    {x: 0, y: 8, name: 'ganymede', label: 'Ganymede'},\r\n  ], ({x, y}) => `${x},${y}`);\r\n\tstatic resources = [\r\n  \t{name: 'tr', label: 'Terraform Rating', colour: 'cyan', fontColour: 'white', initialProduction: 20},\r\n  \t{name: 'money', label: 'MegaCredits', colour: 'yellow', fontColour: 'black', initialValue: 3000},\r\n  \t{name: 'steel', label: 'Steel', colour: 'brown', fontColour: 'white'},\r\n  \t{name: 'titanium', label: 'Titanium', colour: 'black', fontColour: 'white'},\r\n  \t{name: 'plants', label: 'Plants', colour: 'green', fontColour: 'white'},\r\n  \t{name: 'energy', label: 'Energy', colour: 'purple', fontColour: 'white'},\r\n  \t{name: 'heat', label: 'Heat', colour: 'orangered', fontColour: 'white'},\r\n  ];\r\n  static tags = [\r\n  \t{name: 'building', label: 'Building', colour: 'brown', fontColour: 'white', prefix: 'B'},\r\n    {name: 'space', label: 'Space', colour: 'black', fontColour: 'white', prefix: 'S'},\r\n    {name: 'plant', label: 'Plant', colour: 'green', fontColour: 'white', prefix: 'P'},\r\n    {name: 'energy', label: 'Energy', colour: 'purple', fontColour: 'white', prefix: 'En'},\r\n    {name: 'science', label: 'Science', colour: 'white', fontColour: 'black', prefix: 'S'},\r\n    {name: 'earth', label: 'Earth', colour: 'cyan', fontColour: 'black', prefix: 'Ea'},\r\n    {name: 'jupiter', label: 'Jupiter', colour: 'orange', fontColour: 'black', prefix: 'J'},\r\n  \t{name: 'animal', label: 'Animal', colour: 'green', fontColour: 'white', prefix: 'A'},\r\n    {name: 'microbe', label: 'Microbe', colour: 'green', fontColour: 'white', prefix: 'M'},\r\n    {name: 'event', label: 'Event', colour: 'yellow', fontColour: 'black', prefix: 'Ev'},\r\n    {name: 'city', label: 'City', colour: 'grey', fontColour: 'black', prefix: 'C'},\r\n  ];\r\n  static globalParameters = [\r\n  \t{\r\n  \t  name: 'generation', label: 'Generation', initialValue: 1, maxValue: null,\r\n      getLabel: parameter => `${parameter.value}`,\r\n    },\r\n  \t{\r\n  \t  name: 'temperature', label: 'Temperature', initialValue: 0, maxValue: 19,\r\n      emptyColour: 'blue', fullColour: 'red',\r\n      getLabel: parameter => `${-30 + parameter.value * 2}\\u00B0C`,\r\n    },\r\n  \t{\r\n  \t  name: 'oxygen', label: 'Oxygen', initialValue: 0, maxValue: 14,\r\n      emptyColour: 'grey', fullColour: 'cyan',\r\n      getLabel: parameter => `${parameter.value}%`,\r\n    },\r\n  \t{\r\n  \t  name: 'oceans', label: 'Oceans', initialValue: 0, maxValue: 9,\r\n      emptyColour: 'darkgoldenrod', fullColour: 'blue',\r\n      getLabel: parameter => `${parameter.value} oceans`,\r\n    },\r\n  ];\r\n  static standardProjects = [\r\n  \t{\r\n    \tname: 'powerPlant',\r\n      label: 'Power Plant',\r\n      cost: {money: {value: 11}},\r\n      benefit: {energy: {production: 1}},\r\n      globalParameters: {},\r\n      tiles: {},\r\n      conditions: {},\r\n    },\r\n  \t{\r\n    \tname: 'asteroid',\r\n      label: 'Asteroid',\r\n      cost: {money: {value: 14}},\r\n      benefit: {tr: {production: 1}},\r\n      globalParameters: {temperature: 1},\r\n      tiles: {},\r\n      conditions: {maxTemperature: 18},\r\n    },\r\n  \t{\r\n    \tname: 'aquifer',\r\n      label: 'Aquifer',\r\n      cost: {money: {value: 18}},\r\n      benefit: {tr: {production: 1}},\r\n      globalParameters: {oceans: 1},\r\n      tiles: {ocean: 1},\r\n      conditions: {maxOceans: 8},\r\n    },\r\n  \t{\r\n    \tname: 'greenery',\r\n      label: 'Greenery',\r\n      cost: {money: {value: 23}},\r\n      benefit: {tr: {production: 1}},\r\n      globalParameters: {oxygen: 1},\r\n      tiles: {greenery: 1},\r\n      conditions: {},\r\n    },\r\n  \t{\r\n    \tname: 'city',\r\n      label: 'City',\r\n      cost: {money: {value: 25}},\r\n      benefit: {money: {production: 1}},\r\n      globalParameters: {},\r\n      tiles: {city: 1},\r\n      conditions: {},\r\n    },\r\n  ];\r\n  static players = [\r\n  \t{id: 1, colour: 'red', fontColour: 'white'},\r\n  \t{id: 2, colour: 'blue', fontColour: 'white'},\r\n  ];\r\n  static canPurchase(game, player, project) {\r\n    if (!player) {\r\n      return false;\r\n    }\r\n    if (game.action) {\r\n      return false;\r\n    }\r\n  \tfor (const name in project.cost) {\r\n      if (!project.cost.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n    \tif (!(name in player.resources)) {\r\n      \treturn false;\r\n      }\r\n      const resource = player.resources[name];\r\n      const cost = project.cost[name];\r\n      if ('value' in cost) {\r\n      \tif (cost.value > resource.value) {\r\n        \treturn false;\r\n        }\r\n      }\r\n      if ('production' in cost) {\r\n      \tif (cost.production > resource.production) {\r\n        \treturn false;\r\n        }\r\n      }\r\n    }\r\n  \tfor (const condition in project.conditions) {\r\n  \t  if (!project.conditions.hasOwnProperty(condition)) {\r\n  \t    continue;\r\n      }\r\n  \t  const value = project.conditions[condition];\r\n  \t  switch (condition) {\r\n        case \"maxOceans\":\r\n          if (game.globalParameters.oceans.value > value) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"maxTemperature\":\r\n          if (game.globalParameters.temperature.value > value) {\r\n            return false;\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Unknown condition '${condition}'`);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  static purchase(game, player, project) {\r\n  \tif (!this.canPurchase(game, player, project)) {\r\n    \treturn game;\r\n    }\r\n    const newPlayer = {...player, resources: {...player.resources}};\r\n    for (const name in project.cost) {\r\n      if (!project.cost.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n    \tconst cost = project.cost[name];\r\n    \tconst resource = newPlayer.resources[name] = {...newPlayer.resources[name]};\r\n      if ('value' in cost) {\r\n      \tresource.value -= cost.value;\r\n      }\r\n      if ('production' in cost) {\r\n      \tresource.production -= cost.production;\r\n      }\r\n    }\r\n    for (const name in project.benefit) {\r\n      if (!project.benefit.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n    \tconst benefit = project.benefit[name];\r\n      const resource = newPlayer.resources[name] = {...newPlayer.resources[name]};\r\n      if ('value' in benefit) {\r\n      \tresource.value += benefit.value;\r\n      }\r\n      if ('production' in benefit) {\r\n      \tresource.production += benefit.production;\r\n      }\r\n    }\r\n    let newGame = game;\r\n    for (const name in project.globalParameters) {\r\n      if (!project.globalParameters.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      const count = project.globalParameters[name];\r\n      // eslint-disable-next-line no-unused-vars\r\n      for (const i of _.range(count)) {\r\n        const parameter = newGame.globalParameters[name];\r\n        if (parameter.maxValue !== null && parameter.value >= parameter.maxValue) {\r\n          break;\r\n        }\r\n        newGame = {\r\n          ...newGame,\r\n          globalParameters: newGame.globalParameters.map(globalParameter =>\r\n            globalParameter.name === parameter.name ? ({\r\n              ...globalParameter,\r\n              value: globalParameter.value + 1,\r\n            }) : globalParameter),\r\n        };\r\n        Object.assign(\r\n          newGame.globalParameters,\r\n          _.indexBy(newGame.globalParameters, 'name'));\r\n      }\r\n    }\r\n    let action = null;\r\n    for (const name in project.tiles) {\r\n      if (!project.tiles.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      const count = project.tiles[name];\r\n      if (!count) {\r\n        continue;\r\n      }\r\n      action = `place-${name}`;\r\n      break\r\n    }\r\n    if (newPlayer !== player) {\r\n      if (newGame === game) {\r\n        newGame = {...game};\r\n      }\r\n      newGame.players = newGame.players.map(\r\n        oldPlayer => oldPlayer.id === newPlayer.id ? newPlayer : oldPlayer);\r\n    }\r\n    if (action !== game.action) {\r\n      if (newGame === game) {\r\n        newGame = {...game};\r\n      }\r\n      newGame.action = action;\r\n    }\r\n    return newGame;\r\n  }\r\n  static canPlaceOcean(game, player, tile) {\r\n    if (!tile.oceanOnly) {\r\n      return false;\r\n    }\r\n    if (tile.content) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  static placeOcean(game, player, tile) {\r\n    if (!this.canPlaceOcean(game, player, tile)) {\r\n      return game;\r\n    }\r\n\r\n    let placementBonus = this.getPlacementBonus(game, tile);\r\n\r\n    const newGame = {\r\n      ...game,\r\n      board: game.board.map(row => row.map(otherTile => otherTile === tile ? ({\r\n        ...otherTile,\r\n        content: {\r\n          type: 'ocean',\r\n          ownerId: null,\r\n        },\r\n        owner: player.id,\r\n      }) : otherTile)),\r\n      action: null,\r\n    };\r\n\r\n    if (placementBonus) {\r\n      newGame.players = newGame.players.map(\r\n        otherPlayer => otherPlayer.id === player.id ? ({\r\n          ...otherPlayer,\r\n          resources: {\r\n            ...otherPlayer.resources,\r\n            money: {\r\n              ...otherPlayer.resources.money,\r\n              value: otherPlayer.resources.money.value + placementBonus.money.value,\r\n            },\r\n          },\r\n        }) : otherPlayer)\r\n    }\r\n\r\n    return newGame;\r\n  }\r\n  static canPlaceGreenery(game, player, tile) {\r\n    if (!this.canPlaceGreeneryRegardlessOfNeighbours(game, tile)) {\r\n      return false;\r\n    }\r\n    if (this.canPlaceGreeneryWithOwnNeighbour(game, player, tile)) {\r\n      return true;\r\n    }\r\n    if (this.canPlaceGreeneryWithOwnNeighbourAnywhere(game, player)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  static placeGreenery(game, player, tile) {\r\n    if (!this.canPlaceGreenery(game, player, tile)) {\r\n      return game;\r\n    }\r\n\r\n    let placementBonus = this.getPlacementBonus(game, tile);\r\n\r\n    const newGame = {\r\n      ...game,\r\n      board: game.board.map(row => row.map(otherTile => otherTile === tile ? ({\r\n        ...otherTile,\r\n        content: {\r\n          type: 'greenery',\r\n          ownerId: player.id,\r\n        },\r\n        owner: player.id,\r\n      }) : otherTile)),\r\n      action: null,\r\n    };\r\n\r\n    if (placementBonus) {\r\n      newGame.players = newGame.players.map(\r\n        otherPlayer => otherPlayer.id === player.id ? ({\r\n          ...otherPlayer,\r\n          resources: {\r\n            ...otherPlayer.resources,\r\n            money: {\r\n              ...otherPlayer.resources.money,\r\n              value: otherPlayer.resources.money.value + placementBonus.money.value,\r\n            },\r\n          },\r\n        }) : otherPlayer)\r\n    }\r\n\r\n    return newGame;\r\n  }\r\n  static canPlaceGreeneryWithOwnNeighbourAnywhere(game, player) {\r\n    const possibleGreeneryTilesWithOwnNeighbour = _.flatten(game.board)\r\n      .filter(tile => tile.active)\r\n      .filter(tile => this.canPlaceGreeneryRegardlessOfNeighbours(game, tile))\r\n      .filter(tile => this.canPlaceGreeneryWithOwnNeighbour(game, player, tile));\r\n\r\n    return possibleGreeneryTilesWithOwnNeighbour.length > 0;\r\n  }\r\n  static canPlaceGreeneryRegardlessOfNeighbours(game, tile) {\r\n    if (tile.oceanOnly) {\r\n      return false;\r\n    }\r\n    if (tile.allowedCity) {\r\n      return false;\r\n    }\r\n    if (tile.content) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  static canPlaceGreeneryWithOwnNeighbour(game, player, tile) {\r\n    let neighbours = this.getNeighbours(game, tile);\r\n    const ownNeighbours = neighbours.filter(otherTile =>\r\n      otherTile.content && otherTile.content.ownerId === player.id);\r\n    return ownNeighbours.length > 0;\r\n  }\r\n  static canPlaceCity(game, player, tile) {\r\n    if (tile.oceanOnly) {\r\n      return false;\r\n    }\r\n    if (tile.allowedCity) {\r\n      return false;\r\n    }\r\n    if (tile.content) {\r\n      return false;\r\n    }\r\n\r\n    let neighbours = this.getNeighbours(game, tile);\r\n    const cityNeighbours = neighbours.filter(otherTile =>\r\n      otherTile.content && otherTile.content.type === 'city');\r\n    if (cityNeighbours.length) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  static placeCity(game, player, tile) {\r\n    if (!this.canPlaceCity(game, player, tile)) {\r\n      return game;\r\n    }\r\n\r\n    let placementBonus = this.getPlacementBonus(game, tile);\r\n\r\n    const newGame = {\r\n      ...game,\r\n      board: game.board.map(row => row.map(otherTile => otherTile === tile ? ({\r\n        ...otherTile,\r\n        content: {\r\n          type: 'city',\r\n          ownerId: player.id,\r\n        },\r\n        owner: player.id,\r\n      }) : otherTile)),\r\n      action: null,\r\n    };\r\n\r\n    if (placementBonus) {\r\n      newGame.players = newGame.players.map(\r\n        otherPlayer => otherPlayer.id === player.id ? ({\r\n          ...otherPlayer,\r\n          resources: {\r\n            ...otherPlayer.resources,\r\n            money: {\r\n              ...otherPlayer.resources.money,\r\n              value: otherPlayer.resources.money.value + placementBonus.money.value,\r\n            },\r\n          },\r\n        }) : otherPlayer)\r\n    }\r\n\r\n    return newGame;\r\n  }\r\n  static getPlacementBonus(game, tile) {\r\n    const bonus = {money: {value: 0}};\r\n    const neighbours = this.getNeighbours(game, tile);\r\n    const oceanNeighbours = neighbours.filter(\r\n      otherTile => otherTile.content && otherTile.content.type === 'ocean');\r\n    if (!oceanNeighbours.length) {\r\n      return null;\r\n    }\r\n    bonus.money.value += oceanNeighbours.length * 2;\r\n\r\n    return bonus;\r\n  }\r\n  static POSSIBLE_NEIGHBOURS_OFFSETS = _\r\n    .flatten(_.range(-1, 2).map(\r\n      dX => _.range(-1, 2).map(dY => ({dX, dY}))))\r\n    .filter(({dX, dY}) => !(dX === 0 && dY === 0));\r\n  static getNeighbours(game, tile) {\r\n    return this.POSSIBLE_NEIGHBOURS_OFFSETS\r\n      .map(({dX, dY}) => game.board[tile.y + dY]\r\n        ? game.board[tile.y + dY][tile.x + dX] : null)\r\n      .filter(otherTile => otherTile)\r\n      .filter(otherTile => otherTile.active)\r\n      .filter(otherTile => this.areTilesNeighbours(otherTile, tile));\r\n  }\r\n  static areTilesNeighbours(lhs, rhs) {\r\n    if (Math.abs(lhs.x - rhs.x) > 1) {\r\n      return false;\r\n    }\r\n    if (Math.abs(lhs.y - rhs.y) > 1) {\r\n      return false;\r\n    }\r\n    if (lhs.y === rhs.y) {\r\n      return true;\r\n    }\r\n    if (rhs.y % 2 === 0) {\r\n      return lhs.x <= rhs.x;\r\n    } else {\r\n      return lhs.x >= rhs.x;\r\n    }\r\n  }\r\n  static makeGame({playerCount = 2} = {}) {\r\n  \treturn {\r\n      board: this.makeBoard(),\r\n      globalParameters: this.makeGlobalParameters(),\r\n      activePlayer: null,\r\n      players: this.players\r\n      \t.slice(0, playerCount)\r\n        .map(player => this.makePlayer(player)),\r\n      action: \"none\",\r\n    };\r\n  }\r\n  static makeBoard() {\r\n  \treturn _.range(9).map(y => _.range(9).map(x => ({\r\n      x, y, active: (\r\n        x >= Math.ceil((Math.abs(y - 4) - 1) / 2)\r\n        && x <= 8 - Math.ceil((Math.abs(y - 4)) / 2)\r\n      ) || (y === 0 && x === 0) || (y === 8 && x === 0),\r\n      oceanOnly: `${x},${y}` in this.boardOceans,\r\n      allowedCity: this.boardCities[`${x},${y}`] || null,\r\n      content: null, owner: null,\r\n    })));\r\n  }\r\n  static makeGlobalParameters() {\r\n  \tconst parameters = this.globalParameters.map(parameter => ({\r\n    \t...parameter,\r\n      value: parameter.initialValue,\r\n    }));\r\n    Object.assign(parameters, _.indexBy(parameters, 'name'));\r\n\r\n    return parameters;\r\n  }\r\n  static makePlayer(player) {\r\n    return {\r\n      ...player,\r\n      resources: _.object(this.resources.map(resource =>\r\n      \t[resource.name, this.makeResource(resource)])),\r\n      tags: _.object(this.tags.map(tag =>\r\n      \t[tag.name, this.makeTag(tag)])),\r\n      hand: [],\r\n      playedCards: [],\r\n      active: false,\r\n    };\r\n  }\r\n  static makeResource(resource) {\r\n  \treturn {\r\n      value: resource.initialValue || 0,\r\n      production: resource.initialProduction || 0,\r\n      type: resource,\r\n    };\r\n  }\r\n  static makeTag(tag) {\r\n  \treturn {\r\n    \tplayed: 0,\r\n      cards: [],\r\n      type: tag,\r\n    };\r\n  }\r\n}\r\nGameService.resourcesByName = _.indexBy(GameService.resources, 'name');\r\nGameService.standardProjectsByName = _.indexBy(GameService.standardProjects, 'name');\r\n\r\nexport default GameService;\r\n","export const defaultBoardTileSize = 25;\r\n\r\nexport const getBoardTileMeasurements = (size = defaultBoardTileSize) => {\r\n  const longSize = 2 * size;\r\n  const shortSize = Math.floor(size * Math.sqrt(3));\r\n  const longOffset = longSize * 3 / 4  /* Subtract 1 for a snug fit */;\r\n  const shortOffset = shortSize  /* Subtract 1 for a snug fit */;\r\n  return {longSize, shortSize, longOffset, shortOffset};\r\n};\r\n\r\nexport const getBoardTileOffsetFromPosition = ({x, y, size = defaultBoardTileSize}) => {\r\n  const {shortSize, longOffset, shortOffset} = getBoardTileMeasurements(size);\r\n  return {\r\n    x: (y % 2 === 0 ? 0 : shortSize / 2) + shortOffset * x,\r\n    y: longOffset * y,\r\n  };\r\n};\r\n","import * as draw from './draw';\r\n\r\nexport default {\r\n  draw,\r\n  ...draw,\r\n};\r\n","import React, {Component} from \"react\";\r\nimport utils from \"../../utils\";\r\n\r\nclass Hexagon extends Component {\r\n  static points = [\r\n    [0, 50],\r\n    [43, 25],\r\n    [43, -25],\r\n    [0, -50],\r\n    [-43, -25],\r\n    [-43, 25],\r\n    [0, 50],\r\n  ];\r\n  static pointsStringBySize = {};\r\n\r\n  static getPointsString(size) {\r\n    if (!(size in this.pointsStringBySize)) {\r\n      const ratio = size / 50;\r\n      this.pointsStringBySize[size] = this.points\r\n        .map(([x, y]) => `${x * ratio},${y * ratio}`)\r\n        .join(' ');\r\n    }\r\n    return this.pointsStringBySize[size];\r\n  }\r\n\r\n  render() {\r\n    const {id, size = utils.defaultBoardTileSize, position, stroke, fill} = this.props;\r\n    return (\r\n      <polygon\r\n        id={id}\r\n        transform={position ? `translate(${position.x}, ${position.y})` : undefined}\r\n        points={this.constructor.getPointsString(size)}\r\n        stroke={stroke} strokeWidth={3}\r\n        fill={fill}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hexagon;\r\n","import React, {Component} from \"react\";\r\nimport Hexagon from \"./Hexagon\";\r\n\r\nclass DefaultHexagon extends Component {\r\n  static xlinkHref = 'hexagonDefault';\r\n\r\n  render() {\r\n    const {position = {x: 0, y: 0}, stroke, fill, className, onClick} = this.props;\r\n    return (\r\n      <use\r\n        x={position.x} y={position.y}\r\n        xlinkHref={`#${this.constructor.xlinkHref}`}\r\n        stroke={stroke} fill={fill}\r\n        className={className} onClick={onClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass DefaultHexagonDef extends Component {\r\n  render() {\r\n    return (\r\n      <Hexagon id={DefaultHexagon.xlinkHref}/>\r\n    );\r\n  }\r\n}\r\nDefaultHexagon.Def = DefaultHexagonDef;\r\n\r\nexport default DefaultHexagon;\r\n","import React, {Component} from \"react\";\r\nimport DefaultHexagon from \"../draw/DefaultHexagon\";\r\nimport utils from '../../utils';\r\n\r\nclass Hex extends Component {\r\n  onClick = () => {\r\n    this.props.onClick(this.props.tile);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      size = utils.defaultBoardTileSize,\r\n      x = 0, y = 0,\r\n      stroke = 'red', fill = 'black',\r\n      className, onClick,\r\n    } = this.props;\r\n    return (\r\n      <DefaultHexagon\r\n        position={utils.getBoardTileOffsetFromPosition({x, y, size})}\r\n        stroke={stroke} fill={fill}\r\n        className={className} onClick={onClick ? this.onClick : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hex;\r\n","import React, {Component} from \"react\";\r\n\r\nclass OceanIcon extends Component {\r\n  static path = [\r\n    <path key={'hexagon'} fill={'cyan'} stroke={'black'} d={`\r\n      M 14.57076 20.5262\r\n      H 4.85664\r\n      L 0 12.11376\r\n      L 4.85664 3.70132\r\n      h 9.714120000000001\r\n      l 4.85676 8.41248\r\n      L 14.57076 20.5262\r\n      z \r\n    `}/>,\r\n    <path key={'content'} d={`\r\n      M 9.41 14.7708\r\n      c -1.35516 0 -2.03164 -0.3766 -2.73736 -0.77532\r\n      C 5.92216 13.571399999999999 5.08 13.0908 3.44 13.0908\r\n      v 1\r\n      c 1.36 0 2.03504 0.3766 2.74068 0.77532\r\n      c 0.75056 0.42408 1.6112000000000002 0.90468 3.2293200000000004 0.90468\r\n      s 2.47044 -0.48064 3.221 -0.90468\r\n      C 13.336599999999999 14.4674 14 14.0908 15.36 14.0908\r\n      v -1\r\n      c -1.6400000000000001 0 -2.4704800000000002 0.48064 -3.221 0.90468\r\n      C 11.433319999999998 14.394160000000001 10.765160000000002 14.7708 9.41 14.7708\r\n      z \r\n      M 12.139000000000001 11.95548\r\n      c -0.70568 0.39872 -1.3771600000000002 0.77532 -2.7323200000000005 0.77532\r\n      s -2.0300000000000002 -0.3766 -2.73568 -0.77532\r\n      C 5.920520000000001 11.5314 5.08 11.050799999999999 3.44 11.050799999999999\r\n      v 1\r\n      c 1.36 0 2.03504 0.3766 2.74068 0.77532\r\n      c 0.75056 0.42408 1.6112000000000002 0.90468 3.2293200000000004 0.90468\r\n      s 2.47044 -0.48064 3.221 -0.90468\r\n      C 13.336599999999999 12.4274 14 12.050799999999999 15.36 12.050799999999999\r\n      v -1\r\n      C 13.72 11.050799999999999 12.889520000000001 11.5314 12.139000000000001 11.95548\r\n      z \r\n      M 9.41336 11.733200000000002\r\n      c 0.95132 0 1.72252 -0.77156 1.72252 -1.72256\r\n      c 0 -1.42876 -1.72252 -3.4614 -1.72252 -3.4614\r\n      s -1.72256 2.0326400000000002 -1.72256 3.4614\r\n      C 7.690799999999999 10.961640000000001 8.46204 11.733200000000002 9.41336 11.733200000000002\r\n      z\r\n    `} />,\r\n  ];\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nclass OceanIconDef extends Component {\r\n  static xlinkHref = \"ocean-gradient\";\r\n  render() {\r\n    return (\r\n      <radialGradient id={this.constructor.xlinkHref}>\r\n        <stop offset={\"0%\"} stopColor={\"cyan\"}/>\r\n        <stop offset={\"70%\"} stopColor={\"black\"}/>\r\n      </radialGradient>\r\n    );\r\n  }\r\n}\r\nOceanIcon.Def = OceanIconDef;\r\n\r\nexport default OceanIcon;\r\n","import React, {Component} from \"react\";\r\n\r\nclass CityIcon extends Component {\r\n  static path = [\r\n    <path key={'hexagon'} fill={'grey'} stroke={'black'} d={`\r\n      M 14.57076 20.5262\r\n      H 4.85664\r\n      L 0 12.11376\r\n      L 4.85664 3.70132\r\n      h 9.714120000000001\r\n      l 4.85676 8.41248\r\n      L 14.57076 20.5262\r\n      z \r\n    `}/>,\r\n    <path key={'content'} d={`\r\n      M 5.05 11.530275\r\n      h 2.25\r\n      v 0.5\r\n      h -2.25\r\n      v -0.5\r\n      M 5.05 12.805275000000002\r\n      h 2.25\r\n      v 0.5\r\n      h -2.25\r\n      v -0.5\r\n      M 13.96625 6.255275\r\n      h -1.84655\r\n      c -0.43135000000000007 0 -0.7947000000000001 0.35192500000000004 -0.7947000000000001 0.78325\r\n      v 5.64175\r\n      H 8.350000000000001\r\n      v -1.7991000000000001\r\n      c 0 -0.422825 -0.35000000000000003 -0.76815 -0.775 -0.781625\r\n      v -0.64895\r\n      c 0.00425 -0.4211750000000001 -0.33372500000000005 -0.7660750000000001 -0.7549000000000001 -0.770325\r\n      c -0.005025000000000001 -0.00005 -0.010075 -0.00005 -0.0151 0\r\n      H 6.425000000000001\r\n      V 8.12475\r\n      c 0.5590499999999999 -0.138075 0.9003000000000001 -0.7032 0.762225 -1.262225\r\n      C 7.049175 6.303475 6.48405 5.9622 5.925 6.100275\r\n      S 5.0247 6.803475000000001 5.162775 7.3625\r\n      C 5.2556 7.7384 5.5491 8.0319 5.925 8.12475\r\n      v 0.555525\r\n      H 5.540625\r\n      C 5.1093 8.680275 4.75 9.01925 4.75 9.4506\r\n      v 0.64895\r\n      c -0.4 0.013475 -0.75 0.35877500000000007 -0.75 0.781625\r\n      v 5.5577250000000005\r\n      c 0.001425 0.1348 0.11185 0.2429 0.24665 0.24147500000000002\r\n      c 0.0016250000000000001 -0.000025 0.0032250000000000004 -0.00005 0.00485 -0.0001\r\n      h 10.247\r\n      c 0.134725 0.0041 0.2473 -0.101775 0.2514 -0.236525\r\n      c 0.00005 -0.0016250000000000001 0.00007500000000000001 -0.0032250000000000004 0.0001 -0.00485\r\n      V 7.038525\r\n      C 14.748875 6.6062 14.39855 6.2561 13.96625 6.255275\r\n      z \r\n      M 5.630975 7.11345\r\n      c 0 -0.29925 0.24257499999999999 -0.541825 0.541825 -0.541825\r\n      s 0.541825 0.24257499999999999 0.541825 0.541825\r\n      c 0 0.29925 -0.24257499999999999 0.541825 -0.541825 0.541825\r\n      C 5.8736999999999995 7.6549 5.63135 7.4125250000000005 5.630975 7.11345\r\n      z \r\n      M 5.25 9.4506\r\n      c 0 -0.15565 0.135 -0.27032500000000004 0.290625 -0.27032500000000004\r\n      H 6.805\r\n      c 0.144925 -0.004200000000000001 0.2658 0.10985 0.27 0.25477500000000003\r\n      c 0.00015000000000000001 0.005175 0.00015000000000000001 0.010375 0 0.015550000000000001\r\n      v 0.6546750000000001\r\n      H 5.25\r\n      V 9.4506\r\n      z \r\n      M 6.625 16.180275\r\n      H 5.725\r\n      v -1.425\r\n      h 0.9\r\n      V 16.180275\r\n      z \r\n      M 7.85 16.180275\r\n      h -0.7250000000000001\r\n      v -1.685975\r\n      c 0 -0.138075 -0.115475 -0.23902500000000002 -0.25355 -0.23902500000000002\r\n      H 5.47415\r\n      c -0.138075 0 -0.24914999999999998 0.10095000000000001 -0.24914999999999998 0.23902500000000002\r\n      v 1.685975\r\n      H 4.5\r\n      V 10.881175\r\n      c 0.0014000000000000002 -0.15380000000000002 0.1272 -0.277325 0.281 -0.27595000000000003\r\n      c 0.000925 0 0.00185 0.000025 0.0027500000000000003 0.00005\r\n      h 2.7781000000000002\r\n      c 0.1557 -0.0032500000000000003 0.28465 0.1202 0.28815 0.2759\r\n      V 16.180275\r\n      z \r\n      M 10.3 16.180275\r\n      h -0.925\r\n      v -0.7000000000000001\r\n      h 0.925\r\n      V 16.180275\r\n      z \r\n      M 11.325 16.180275\r\n      h -0.525\r\n      v -0.940725\r\n      c -0.004200000000000001 -0.141925 -0.11865000000000002 -0.25577500000000003 -0.260575 -0.25927500000000003\r\n      h -1.40895\r\n      c -0.140925 0.0039000000000000003 -0.25365000000000004 0.11830000000000002 -0.255475 0.25927500000000003\r\n      v 0.940725\r\n      h -0.525\r\n      v -3\r\n      h 2.975\r\n      V 16.180275\r\n      z \r\n      M 14.25 16.180275\r\n      h -2.4250000000000003\r\n      v -1.3250000000000002\r\n      h 2.4250000000000003\r\n      V 16.180275\r\n      z \r\n      M 14.25 14.355275\r\n      h -2.4250000000000003\r\n      v -0.65\r\n      h 2.4250000000000003\r\n      V 14.355275\r\n      z \r\n      M 14.25 13.205275\r\n      h -2.4250000000000003\r\n      v -0.675\r\n      h 2.4250000000000003\r\n      V 13.205275\r\n      z \r\n      M 14.25 12.030275\r\n      h -2.4250000000000003\r\n      v -0.675\r\n      h 2.4250000000000003\r\n      V 12.030275\r\n      z \r\n      M 14.25 10.855275\r\n      h -2.4250000000000003\r\n      v -0.65\r\n      h 2.4250000000000003\r\n      V 10.855275\r\n      z \r\n      M 14.25 9.705275\r\n      h -2.4250000000000003\r\n      v -0.675\r\n      h 2.4250000000000003\r\n      V 9.705275\r\n      z \r\n      M 14.25 8.530275\r\n      h -2.4250000000000003\r\n      v -0.65\r\n      h 2.4250000000000003\r\n      V 8.530275\r\n      z \r\n      M 14.25 7.380275\r\n      h -2.4250000000000003\r\n      v -0.34175\r\n      c 0 -0.15575000000000003 0.13905 -0.28325 0.2947 -0.28325\r\n      h 1.84655\r\n      c 0.1563 0.0005250000000000001 0.28295 0.12695 0.28375 0.28325\r\n      V 7.380275\r\n      z\r\n    `}/>,\r\n  ];\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nclass CityDef extends Component {\r\n  static xlinkHref = \"city-gradient\";\r\n  render() {\r\n    return (\r\n      <radialGradient id={this.constructor.xlinkHref}>\r\n        <stop offset={\"0%\"} stopColor={\"grey\"}/>\r\n        <stop offset={\"70%\"} stopColor={\"black\"}/>\r\n      </radialGradient>\r\n    );\r\n  }\r\n}\r\nCityIcon.Def = CityDef;\r\n\r\nexport default CityIcon;\r\n","import React, {Component} from 'react';\r\nimport utils from \"../../utils\";\r\n\r\nclass OceanHex extends Component {\r\n  static path = [\r\n    <path key={'background'} fill={\"cyan\"} stroke={\"black\"} d={`\r\n      M 0 25\r\n      L 21.5,12.5\r\n      L 21.5,-12.5\r\n      L 0,-25\r\n      L -21.5,-12.5\r\n      L -21.5,12.5\r\n      z \r\n    `} />,\r\n    <path key={'icon'} d={`\r\n      M -0.4750000000000014 6.927\r\n      c -3.3878999999999997 0 -5.0790999999999995 -0.9415 -6.843399999999999 -1.9383\r\n      C -9.194600000000001 3.9284999999999997 -11.3 2.7269999999999968 -15.4 2.7269999999999968\r\n      v 2.5\r\n      c 3.4000000000000004 0 5.0876 0.9415 6.851699999999999 1.9383\r\n      c 1.8764 1.0602 4.0280000000000005 2.2617000000000003 8.073300000000001 2.2617000000000003\r\n      s 6.1761 -1.2016 8.0525 -2.2617000000000003\r\n      C 9.341499999999996 6.168500000000002 11 5.226999999999997 14.399999999999999 5.226999999999997\r\n      v -2.5\r\n      c -4.1000000000000005 0 -6.176200000000001 1.2016 -8.0525 2.2617000000000003\r\n      C 4.583299999999994 5.985400000000006 2.912900000000004 6.927 -0.4750000000000014 6.927\r\n      z \r\n      M 6.347500000000004 -0.11129999999999995\r\n      c -1.7642 0.9968 -3.4429000000000003 1.9383 -6.830800000000002 1.9383\r\n      s -5.075000000000001 -0.9415 -6.8392 -1.9383\r\n      C -9.198699999999999 -1.1715000000000018 -11.3 -2.3730000000000047 -15.4 -2.3730000000000047\r\n      v 2.5\r\n      c 3.4000000000000004 0 5.0876 0.9415 6.851699999999999 1.9383\r\n      c 1.8764 1.0602 4.0280000000000005 2.2617000000000003 8.073300000000001 2.2617000000000003\r\n      s 6.1761 -1.2016 8.0525 -2.2617000000000003\r\n      C 9.341499999999996 1.0685000000000002 11 0.12699999999999534 14.399999999999999 0.12699999999999534\r\n      v -2.5\r\n      C 10.300000000000004 -2.3730000000000047 8.223800000000004 -1.1715000000000018 6.347500000000004 -0.11129999999999995\r\n      z \r\n      M -0.4665999999999997 -0.6669999999999945\r\n      c 2.3783000000000003 0 4.3063 -1.9289 4.3063 -4.3064\r\n      c 0 -3.5719000000000003 -4.3063 -8.6535 -4.3063 -8.6535\r\n      s -4.3064 5.081600000000001 -4.3064 8.6535\r\n      C -4.773000000000003 -2.5958999999999968 -2.844899999999999 -0.6669999999999945 -0.4665999999999997 -0.6669999999999945\r\n      z\r\n    `} />,\r\n  ];\r\n\r\n  render() {\r\n    const {x = 0, y = 0} = this.props;\r\n    const offset = utils.getBoardTileOffsetFromPosition({x, y});\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OceanHex;\r\n","import React, {Component} from 'react';\r\nimport utils from \"../../utils\";\r\n\r\nclass GreeneryHex extends Component {\r\n  static path = [\r\n    <path key={'background'} fill={\"green\"} stroke={\"black\"} d={`\r\n      M 0 25\r\n      L 21.5,12.5\r\n      L 21.5,-12.5\r\n      L 0,-25\r\n      L -21.5,-12.5\r\n      L -21.5,12.5\r\n      z \r\n    `} />,\r\n    <path key={'icon'} d={`\r\n      M 10.109080000000002 -4.437059999999999\r\n      c 0.03150000000000001 -0.22253 0.04886 -0.44961000000000007 0.04886 -0.6806800000000001\r\n      c 0 -2.6649000000000003 -2.1680400000000004 -4.832940000000001 -4.832940000000001 -4.832940000000001\r\n      c -1.19693 0 -2.29271 0.43827000000000005 -3.1377500000000005 1.1615800000000003\r\n      C 1.152160000000002 -10.69961 -0.8709099999999985 -12 -3.1921800000000005 -12\r\n      C -6.5633099999999995 -12 -9.305909999999999 -9.2574 -9.305909999999999 -5.88627\r\n      c 0 1.5388100000000002 0.57169 2.9465100000000004 1.51354 4.022340000000001\r\n      c -0.6657000000000001 0.8283100000000001 -1.06533 1.8790800000000003 -1.06533 3.02197\r\n      c 0 2.6649000000000003 2.1680400000000004 4.832940000000001 4.832940000000001 4.832940000000001\r\n      c 1.0656100000000002 0 2.05121 -0.34734000000000004 2.8511 -0.9338700000000001\r\n      v 6.135710000000001\r\n      c 0 0.19299000000000002 -0.15610000000000002 0.35000000000000003 -0.34797000000000006 0.35000000000000003\r\n      h -1.7500000000000002\r\n      c -0.5800900000000001 0 -1.05203 0.47103000000000006 -1.05203 1.05\r\n      v 0.49000000000000005\r\n      c 0 0.5789700000000001 0.47194 1.05 1.05203 1.05\r\n      h 7.490000000000001\r\n      c 0.5778500000000001 0 1.04797 -0.47103000000000006 1.04797 -1.05\r\n      v -0.49000000000000005\r\n      c 0 -0.5789700000000001 -0.47012000000000004 -1.05 -1.04797 -1.05\r\n      h -1.7500000000000002\r\n      c -0.19082000000000002 0 -0.35203 -0.16030000000000003 -0.35203 -0.35000000000000003\r\n      v -6.625990000000001\r\n      c 0.9333100000000001 0.5777800000000001 2.0325900000000003 0.9118200000000001 3.2085900000000005 0.9118200000000001\r\n      c 3.3711300000000004 0 6.11373 -2.7426000000000004 6.11373 -6.11373\r\n      C 11.438730000000003 -2.070990000000002 10.94089 -3.3926599999999993 10.109080000000002 -4.437059999999999\r\n      z\r\n    `} />,\r\n  ];\r\n\r\n  render() {\r\n    const {x = 0, y = 0, fill} = this.props;\r\n    const offset = utils.getBoardTileOffsetFromPosition({x, y});\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`} fill={fill}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreeneryHex;\r\n","import React, {Component} from 'react';\r\nimport utils from \"../../utils\";\r\n\r\nclass CityHex extends Component {\r\n  static path = [\r\n    <path key={'background'} fill={\"grey\"} stroke={\"black\"} d={`\r\n      M 0 25\r\n      L 21.5,12.5\r\n      L 21.5,-12.5\r\n      L 0,-25\r\n      L -21.5,-12.5\r\n      L -21.5,12.5\r\n      z \r\n    `} />,\r\n    <path key={'icon'} d={`\r\n      M -7.9 -0.9394500000000008\r\n      h 4.5\r\n      v 1\r\n      h -4.5\r\n      v -1\r\n      M -7.9 1.6105500000000035\r\n      h 4.5\r\n      v 1\r\n      h -4.5\r\n      v -1\r\n      M 9.932500000000001 -11.48945\r\n      h -3.6931\r\n      c -0.8627000000000001 0 -1.5894000000000001 0.7038500000000001 -1.5894000000000001 1.5665\r\n      v 11.2835\r\n      H -1.2999999999999972\r\n      v -3.5982000000000003\r\n      c 0 -0.84565 -0.7000000000000001 -1.5363 -1.55 -1.56325\r\n      v -1.2979\r\n      c 0.0085 -0.8423500000000002 -0.6674500000000001 -1.5321500000000001 -1.5098000000000003 -1.54065\r\n      c -0.010050000000000002 -0.0001 -0.02015 -0.0001 -0.0302 0\r\n      H -5.149999999999999\r\n      V -7.750499999999999\r\n      c 1.1180999999999999 -0.27615 1.8006000000000002 -1.4064 1.52445 -2.52445\r\n      C -3.90165 -11.39305 -5.0319 -12.0756 -6.15 -11.79945\r\n      S -7.9506 -10.393049999999999 -7.67445 -9.275\r\n      C -7.4887999999999995 -8.5232 -6.9018 -7.9361999999999995 -6.15 -7.750499999999999\r\n      v 1.11105\r\n      H -6.918749999999999\r\n      C -7.7814 -6.63945 -8.5 -5.961500000000001 -8.5 -5.098800000000001\r\n      v 1.2979\r\n      c -0.8 0.02695 -1.5 0.7175500000000001 -1.5 1.56325\r\n      v 11.115450000000001\r\n      c 0.00285 0.2696 0.2237 0.4858 0.4933 0.48295000000000005\r\n      c 0.0032500000000000003 -0.00005 0.006450000000000001 -0.0001 0.0097 -0.0002\r\n      h 20.494\r\n      c 0.26945 0.0082 0.4946 -0.20355 0.5028 -0.47305\r\n      c 0.0001 -0.0032500000000000003 0.00015000000000000001 -0.006450000000000001 0.0002 -0.0097\r\n      V -9.92295\r\n      C 11.49775 -10.7876 10.7971 -11.4878 9.932500000000001 -11.48945\r\n      z \r\n      M -6.738049999999999 -9.7731\r\n      c 0 -0.5985 0.48514999999999997 -1.08365 1.08365 -1.08365\r\n      s 1.08365 0.48514999999999997 1.08365 1.08365\r\n      c 0 0.5985 -0.48514999999999997 1.08365 -1.08365 1.08365\r\n      C -6.252600000000001 -8.6902 -6.737299999999999 -9.174949999999999 -6.738049999999999 -9.7731\r\n      z \r\n      M -7.5 -5.098800000000001\r\n      c 0 -0.3113 0.27 -0.5406500000000001 0.58125 -0.5406500000000001\r\n      H -4.390000000000001\r\n      c 0.28985 -0.008400000000000001 0.5316 0.2197 0.54 0.5095500000000001\r\n      c 0.00030000000000000003 0.01035 0.00030000000000000003 0.02075 0 0.031100000000000003\r\n      v 1.3093500000000002\r\n      H -7.5\r\n      V -5.098800000000001\r\n      z \r\n      M -4.75 8.360550000000003\r\n      H -6.550000000000001\r\n      v -2.85\r\n      h 1.8\r\n      V 8.360550000000003\r\n      z \r\n      M -2.3000000000000007 8.360550000000003\r\n      h -1.4500000000000002\r\n      v -3.37195\r\n      c 0 -0.27615 -0.23095 -0.47805000000000003 -0.5071 -0.47805000000000003\r\n      H -7.0517\r\n      c -0.27615 0 -0.49829999999999997 0.20190000000000002 -0.49829999999999997 0.47805000000000003\r\n      v 3.37195\r\n      H -9\r\n      V -2.2376499999999986\r\n      c 0.0028000000000000004 -0.30760000000000004 0.2544 -0.55465 0.562 -0.5519000000000001\r\n      c 0.00185 0 0.0037 0.00005 0.0055000000000000005 0.0001\r\n      h 5.5562000000000005\r\n      c 0.3114 -0.006500000000000001 0.5693 0.2404 0.5763 0.5518\r\n      V 8.360550000000003\r\n      z \r\n      M 2.6000000000000014 8.360550000000003\r\n      h -1.85\r\n      v -1.4000000000000001\r\n      h 1.85\r\n      V 8.360550000000003\r\n      z \r\n      M 4.649999999999999 8.360550000000003\r\n      h -1.05\r\n      v -1.88145\r\n      c -0.008400000000000001 -0.28385 -0.23730000000000004 -0.5115500000000001 -0.52115 -0.5185500000000001\r\n      h -2.8179\r\n      c -0.28185 0.0078000000000000005 -0.5073000000000001 0.23660000000000003 -0.51095 0.5185500000000001\r\n      v 1.88145\r\n      h -1.05\r\n      v -6\r\n      h 5.95\r\n      V 8.360550000000003\r\n      z \r\n      M 10.5 8.360550000000003\r\n      h -4.8500000000000005\r\n      v -2.6500000000000004\r\n      h 4.8500000000000005\r\n      V 8.360550000000003\r\n      z \r\n      M 10.5 4.710550000000001\r\n      h -4.8500000000000005\r\n      v -1.3\r\n      h 4.8500000000000005\r\n      V 4.710550000000001\r\n      z \r\n      M 10.5 2.4105500000000006\r\n      h -4.8500000000000005\r\n      v -1.35\r\n      h 4.8500000000000005\r\n      V 2.4105500000000006\r\n      z \r\n      M 10.5 0.060549999999999216\r\n      h -4.8500000000000005\r\n      v -1.35\r\n      h 4.8500000000000005\r\n      V 0.060549999999999216\r\n      z \r\n      M 10.5 -2.2894499999999987\r\n      h -4.8500000000000005\r\n      v -1.3\r\n      h 4.8500000000000005\r\n      V -2.2894499999999987\r\n      z \r\n      M 10.5 -4.589449999999999\r\n      h -4.8500000000000005\r\n      v -1.35\r\n      h 4.8500000000000005\r\n      V -4.589449999999999\r\n      z \r\n      M 10.5 -6.939450000000001\r\n      h -4.8500000000000005\r\n      v -1.3\r\n      h 4.8500000000000005\r\n      V -6.939450000000001\r\n      z \r\n      M 10.5 -9.23945\r\n      h -4.8500000000000005\r\n      v -0.6835\r\n      c 0 -0.31150000000000005 0.2781 -0.5665 0.5894 -0.5665\r\n      h 3.6931\r\n      c 0.3126 0.0010500000000000002 0.5659 0.2539 0.5675 0.5665\r\n      V -9.23945\r\n      z\r\n    `} />,\r\n  ];\r\n\r\n  render() {\r\n    const {x = 0, y = 0, fill} = this.props;\r\n    const offset = utils.getBoardTileOffsetFromPosition({x, y});\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`} fill={fill}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CityHex;\r\n","import React, {Component} from \"react\";\r\nimport Hex from \"./Hex\";\r\nimport OceanIcon from \"../draw/OceanIcon\";\r\nimport CityIcon from \"../draw/CityIcon\";\r\nimport GameService from \"../../game/GameService\";\r\nimport _ from \"underscore\";\r\nimport OceanHex from \"../draw/OceanHex\";\r\nimport GreeneryHex from \"../draw/GreeneryHex\";\r\nimport CityHex from \"../draw/CityHex\";\r\nimport utils from \"../../utils\";\r\n\r\nclass Board extends Component {\r\n  static tileComponents = {\r\n    'ocean': OceanHex,\r\n    'greenery': GreeneryHex,\r\n    'city': CityHex,\r\n  };\r\n  static getBorder(board) {\r\n    const {longSize, shortSize, longOffset, shortOffset} = utils.getBoardTileMeasurements();\r\n    const x = -shortSize / 2 - 20, y = -longSize / 2 - 20;\r\n    const width = board[0].length * shortOffset + 40;\r\n    const height = board.length * longOffset - longOffset + longSize + 40;\r\n    return {x, y, width, height};\r\n  }\r\n\r\n  static getSize(board) {\r\n    const {width, height} = this.getBorder(board);\r\n    return {width, height};\r\n  }\r\n\r\n  onPlaceOceanClick = tile => {\r\n    this.props.control.placeOcean(this.props.game.activePlayer, tile);\r\n  };\r\n\r\n  onPlaceGreeneryClick = tile => {\r\n    this.props.control.placeGreenery(this.props.game.activePlayer, tile);\r\n  };\r\n\r\n  onPlaceCityClick = tile => {\r\n    this.props.control.placeCity(this.props.game.activePlayer, tile);\r\n  };\r\n\r\n  getTileFillColour(tile) {\r\n    let player = this.props.game.players\r\n      .find(player => player.id === tile.content.ownerId);\r\n    if (!player) {\r\n      return undefined;\r\n    }\r\n    return player.colour;\r\n  }\r\n\r\n  render() {\r\n    const {game, activePlayer, board, offset} = this.props;\r\n    const {x, y, width, height} = this.constructor.getBorder(board);\r\n    const activeTiles = _.flatten(board).filter(tile => tile.active);\r\n    return (\r\n      <g transform={`translate(${-x + offset.x}, ${-y + offset.y})`}>\r\n        <rect x={x} y={y} width={width} height={height}/>\r\n        {activeTiles.map(tile =>\r\n          <Hex\r\n            key={`${tile.x},${tile.y}`}\r\n            x={tile.x} y={tile.y}\r\n            fill={(\r\n              tile.oceanOnly\r\n              ? `url(#${OceanIcon.Def.xlinkHref})`\r\n              : tile.allowedCity\r\n              ? `url(#${CityIcon.Def.xlinkHref})`\r\n              : undefined\r\n            )}\r\n          />)}\r\n        {activeTiles.filter(tile => tile.content).map(tile => ({\r\n          tile,\r\n          TypeHex: this.constructor.tileComponents[tile.content.type],\r\n        })).map(({tile, TypeHex}) =>\r\n          <TypeHex\r\n            key={`${tile.x},${tile.y}`}\r\n            x={tile.x} y={tile.y}\r\n            fill={this.getTileFillColour(tile)}\r\n          />)}\r\n        {game.action === \"place-ocean\" ? (\r\n          activeTiles.filter(tile => GameService.canPlaceOcean(game, activePlayer, tile)).map(tile =>\r\n            <Hex\r\n              key={`${tile.x},${tile.y}`}\r\n              x={tile.x} y={tile.y}\r\n              stroke={'blue'}\r\n              fill={(\r\n                tile.oceanOnly\r\n                ? `url(#${OceanIcon.Def.xlinkHref})`\r\n                : tile.allowedCity\r\n                ? `url(#${CityIcon.Def.xlinkHref})`\r\n                : undefined\r\n              )}\r\n              tile={tile}\r\n              onClick={this.onPlaceOceanClick}\r\n              className={'clickable'}\r\n            />)\r\n        ) : game.action === \"place-greenery\" ? (\r\n          activeTiles.filter(tile => GameService.canPlaceGreenery(game, activePlayer, tile)).map(tile =>\r\n            <Hex\r\n              key={`${tile.x},${tile.y}`}\r\n              x={tile.x} y={tile.y}\r\n              stroke={'blue'}\r\n              fill={(\r\n                tile.oceanOnly\r\n                ? `url(#${OceanIcon.Def.xlinkHref})`\r\n                : tile.allowedCity\r\n                ? `url(#${CityIcon.Def.xlinkHref})`\r\n                : undefined\r\n              )}\r\n              tile={tile}\r\n              onClick={this.onPlaceGreeneryClick}\r\n              className={'clickable'}\r\n            />)\r\n        ) : game.action === \"place-city\" ? (\r\n          activeTiles.filter(tile => GameService.canPlaceCity(game, activePlayer, tile)).map(tile =>\r\n            <Hex\r\n              key={`${tile.x},${tile.y}`}\r\n              x={tile.x} y={tile.y}\r\n              stroke={'blue'}\r\n              fill={(\r\n                tile.oceanOnly\r\n                ? `url(#${OceanIcon.Def.xlinkHref})`\r\n                : tile.allowedCity\r\n                ? `url(#${CityIcon.Def.xlinkHref})`\r\n                : undefined\r\n              )}\r\n              tile={tile}\r\n              onClick={this.onPlaceCityClick}\r\n              className={'clickable'}\r\n            />)\r\n        ) : null}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, {Component} from \"react\";\r\n\r\nclass ProductionBox extends Component {\r\n  render() {\r\n    const {resource, offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${3 + offset.y})`}>\r\n        <rect\r\n          width={19} height={19}\r\n          fill={resource.type.colour} stroke={'slategrey'} strokeWidth={4}\r\n        />\r\n        <svg width={19} height={19}>\r\n          <text\r\n            x={\"50%\"} y={\"50%\"}\r\n            dominantBaseline={\"middle\"} textAnchor={\"middle\"}\r\n            fill={resource.type.fontColour}\r\n            fontSize={resource.production < 100\r\n              ? undefined : resource.production < 1000 ? '0.66em' : '0.5em'}\r\n          >{resource.production}</text>\r\n        </svg>\r\n        <rect\r\n          width={19} height={19}\r\n          fill={'transparent'} stroke={'transparent'} strokeWidth={4}\r\n        >\r\n          <title>{resource.production} {resource.type.label} per\r\n            generation</title>\r\n        </rect>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductionBox;\r\n","import React, {Component} from \"react\";\r\n\r\nclass ResourceBox extends Component {\r\n  render() {\r\n    const {resource, offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${3 + offset.y})`}>\r\n        <rect\r\n          width={19} height={19}\r\n          fill={resource.type.colour} stroke={'black'}\r\n        />\r\n        <svg width={19} height={19}>\r\n          <text\r\n            x={\"50%\"} y={\"50%\"}\r\n            dominantBaseline={\"middle\"} textAnchor={\"middle\"}\r\n            fill={resource.type.fontColour}\r\n            fontSize={resource.value < 100\r\n              ? undefined : resource.value < 1000 ? '0.66em' : '0.5em'}\r\n          >{resource.value}</text>\r\n        </svg>\r\n        <rect\r\n          width={19} height={19}\r\n          fill={'transparent'} stroke={'transparent'}\r\n        >\r\n          <title>{resource.value} {resource.type.label}</title>\r\n        </rect>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResourceBox;\r\n","import React, {Component, Fragment} from \"react\";\r\nimport ResourceBox from \"./ResourceBox\";\r\nimport ProductionBox from \"./ProductionBox\";\r\n\r\nclass ResourceAndProductionBoxes extends Component {\r\n  render() {\r\n    const {resource, offset, vertical = true} = this.props;\r\n    return (\r\n      <Fragment>\r\n        <ResourceBox\r\n          offset={{x: 0 + offset.x, y: 0 + offset.y}} resource={resource}\r\n        />\r\n        <ProductionBox\r\n          offset={\r\n            vertical\r\n              ? {x: 0 + offset.x, y: 25 + offset.y}\r\n              : {x: 25 + offset.x, y: 0 + offset.y}\r\n          }\r\n          resource={resource}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ResourceAndProductionBoxes;\r\n","import React, {Component} from \"react\";\r\n\r\nclass TagCircle extends Component {\r\n  render() {\r\n    const {tag, offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${3 + offset.y})`}>\r\n        <rect width={19} height={19} rx={10} ry={10} fill={tag.type.colour}\r\n              stroke={'black'}/>\r\n        <svg width={19} height={19}>\r\n          <text\r\n            x={\"50%\"} y={\"50%\"}\r\n            dominantBaseline={\"middle\"} textAnchor={\"middle\"}\r\n            fill={tag.type.fontColour}\r\n          >{tag.type.prefix}{tag.played}</text>\r\n        </svg>\r\n        <rect\r\n          width={19} height={19} rx={10} ry={10}\r\n          fill={'transparent'} stroke={'transparent'}\r\n        >\r\n          <title>{tag.played} {tag.type.label} tags played</title>\r\n        </rect>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagCircle;\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport ProductionBox from \"../resources/ProductionBox\";\r\nimport ResourceAndProductionBoxes\r\n  from \"../resources/ResourceAndProductionBoxes\";\r\nimport TagCircle from \"../resources/TagCircle\";\r\n\r\nclass Player extends Component {\r\n  static getSize() {\r\n\t\treturn {\r\n    \twidth: (\r\n    \t  100\r\n        + 25 * GameService.resources.length\r\n        + (GameService.tags.length % Math.ceil(GameService.tags.length / 2) + 1) * 25\r\n      ),\r\n      height: 50,\r\n    };\r\n  }\r\n\r\n\tselectPlayer = () => {\r\n  \tthis.props.control.selectPlayer(this.props.player);\r\n  };\r\n\r\n\trender() {\r\n  \tconst {player, offset} = this.props;\r\n    const size = this.constructor.getSize();\r\n  \treturn (\r\n    \t<g transform={`translate(${offset.x}, ${offset.y})`}>\r\n    \t  <rect\r\n          x={0} y={0} width={size.width} height={size.height}\r\n          fill={player.colour} fillOpacity={player.active ? undefined : 0.4}\r\n          stroke={'black'} strokeWidth={2}\r\n          onClick={this.selectPlayer}\r\n          className={player.active ? undefined : 'clickable'}\r\n        />\r\n        <text\r\n          x={10} y={20}\r\n          fill={player.fontColour} style={{pointerEvents: 'none'}}\r\n        >\r\n          Player #{player.id}\r\n        </text>\r\n        <ProductionBox offset={{x: 100, y: 0}} resource={player.resources.tr} />\r\n        {GameService.resources.filter(resource => resource.name !== 'tr').map((resource, index) => (\r\n\t        <ResourceAndProductionBoxes\r\n            key={resource.name}\r\n            offset={{x: 100 + 25 * (index + 1), y: 0}}\r\n            resource={player.resources[resource.name]}\r\n          />\r\n        ))}\r\n        {GameService.tags.map((tag, index) => (\r\n\t        <TagCircle\r\n            key={tag.name}\r\n            offset={{\r\n            \tx: (\r\n            \t  100\r\n                + 25 * GameService.resources.length\r\n                + (index % Math.ceil(GameService.tags.length / 2)) * 25\r\n              ),\r\n              y: (\r\n                25 * Math.floor(index / Math.ceil(GameService.tags.length / 2))\r\n              ),\r\n            }}\r\n            tag={player.tags[tag.name]}\r\n          />\r\n        ))}\r\n    \t</g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, {Component} from \"react\";\r\nimport Player from \"./Player\";\r\n\r\nclass Players extends Component {\r\n  static getSize(players) {\r\n    const playerSize = Player.getSize();\r\n    return {\r\n      width: playerSize.width,\r\n      height: playerSize.height * players.length + 10 * (players.length - 1),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {players, offset, control} = this.props;\r\n    const playerSize = Player.getSize();\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {players.map((player, index) =>\r\n          <Player\r\n            key={player.id}\r\n            offset={{x: 0, y: (playerSize.height + 10) * index}}\r\n            player={player}\r\n            control={control}\r\n          />\r\n        )}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Players;\r\n","import React, {Component} from \"react\";\r\n\r\nclass RightArrow extends Component {\r\n  static path = <path d={`\r\n    M 15.375 12\r\n    L 10 7.54\r\n    C 9.695 7.287 9.461 7 9 7\r\n    C 8.375 7 8 7.516 8 8\r\n    v 3\r\n    H 1\r\n    C 0.45 11 0 11.45 0 12\r\n    v 2\r\n    c 0 0.55 0.45 1 1 1\r\n    h 7\r\n    v 3\r\n    c 0 0.484 0.375 1 1 1\r\n    c 0.461 0 0.695 -0.287 1 -0.54\r\n    L 15.375 14\r\n    C 15.758 13.688 16 13.445 16 13\r\n    S 15.758 12.312999999999999 15.375 12\r\n    z\r\n  `} />;\r\n\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RightArrow;\r\n","import React, {Component} from \"react\";\r\n\r\nclass GreeneryIcon extends Component {\r\n  static path = [\r\n    <path key={'hexagon'} fill={'green'} stroke={'black'} d={`\r\n      M 14.57076 20.5262\r\n      H 4.85664\r\n      L 0 12.11376\r\n      L 4.85664 3.70132\r\n      h 9.714120000000001\r\n      l 4.85676 8.41248\r\n      L 14.57076 20.5262\r\n      z \r\n    `}/>,\r\n    <path key={'content'} d={`\r\n      M 14.054540000000001 9.78147\r\n      c 0.015750000000000004 -0.111265 0.02443 -0.22480500000000003 0.02443 -0.34034000000000003\r\n      c 0 -1.3324500000000001 -1.0840200000000002 -2.4164700000000003 -2.4164700000000003 -2.4164700000000003\r\n      c -0.598465 0 -1.146355 0.21913500000000002 -1.5688750000000002 0.5807900000000001\r\n      C 9.576080000000001 6.650195 8.564545 6 7.40391 6\r\n      C 5.718345 6 4.3470450000000005 7.3713 4.3470450000000005 9.056865\r\n      c 0 0.7694050000000001 0.285845 1.4732550000000002 0.75677 2.0111700000000003\r\n      c -0.33285000000000003 0.41415500000000005 -0.532665 0.9395400000000002 -0.532665 1.510985\r\n      c 0 1.3324500000000001 1.0840200000000002 2.4164700000000003 2.4164700000000003 2.4164700000000003\r\n      c 0.5328050000000001 0 1.025605 -0.17367000000000002 1.42555 -0.46693500000000004\r\n      v 3.0678550000000007\r\n      c 0 0.09649500000000001 -0.07805000000000001 0.17500000000000002 -0.17398500000000003 0.17500000000000002\r\n      h -0.8750000000000001\r\n      c -0.29004500000000005 0 -0.526015 0.23551500000000003 -0.526015 0.525\r\n      v 0.24500000000000002\r\n      c 0 0.28948500000000005 0.23597 0.525 0.526015 0.525\r\n      h 3.7450000000000006\r\n      c 0.28892500000000004 0 0.523985 -0.23551500000000003 0.523985 -0.525\r\n      v -0.24500000000000002\r\n      c 0 -0.28948500000000005 -0.23506000000000002 -0.525 -0.523985 -0.525\r\n      h -0.8750000000000001\r\n      c -0.09541000000000001 0 -0.176015 -0.08015000000000001 -0.176015 -0.17500000000000002\r\n      v -3.3129950000000004\r\n      c 0.46665500000000004 0.28889000000000004 1.0162950000000002 0.45591000000000004 1.6042950000000002 0.45591000000000004\r\n      c 1.6855650000000002 0 3.056865 -1.3713000000000002 3.056865 -3.056865\r\n      C 14.719365000000002 10.964504999999999 14.470445 10.30367 14.054540000000001 9.78147\r\n      z\r\n    `}/>,\r\n  ];\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreeneryIcon;\r\n","import React, {Component} from 'react';\r\n\r\nclass TemperatureGauge extends Component {\r\n  static path = [\r\n    <path key={'fill'} fill={'red'} stroke={'black'} d={`\r\n      M 10.19185 12.5282\r\n      c -0.03025 -0.019450000000000002 -0.09175 -0.05605 -0.09175 -0.14770000000000003\r\n      V 4.1299\r\n      C 10.100100000000001 2.95545 9.14465 2 7.970300000000001 2\r\n      C 6.7959000000000005 2 5.840450000000001 2.95545 5.840450000000001 4.1299\r\n      v 8.2589\r\n      c 0 0.0771 -0.06185000000000001 0.12025 -0.09235 0.13985\r\n      c -1.1736000000000002 0.75365 -1.8897 2.05045 -1.8897 3.4597499999999997\r\n      c 0 2.2674 1.8446000000000002 4.112 4.1119 4.112\r\n      c 2.26735 0 4.1119 -1.8446500000000001 4.1119 -4.112\r\n      C 12.0822 14.578800000000001 11.36585 13.28185 10.19185 12.5282\r\n      z \r\n    `} />,\r\n    <path key={'content'} d={`\r\n      M 7.970300000000001 19.3504\r\n      c -1.8537500000000002 0 -3.3619000000000003 -1.5082000000000002 -3.3619000000000003 -3.362\r\n      c 0 -1.24465 0.68335 -2.38215 1.78345 -2.9685\r\n      l 0.046150000000000004 -0.0246\r\n      c 0 0 0.15245 -0.06065000000000001 0.15245 -0.30435\r\n      c 0 -2.1403 0 -8.56105 0 -8.56105\r\n      C 6.59045 3.3689999999999998 7.2094000000000005 2.75 7.970300000000001 2.75\r\n      c 0.76085 0 1.3798000000000001 0.6190000000000001 1.3798000000000001 1.3799000000000001\r\n      c 0 0 0 6.4231 0 8.564100000000002\r\n      c 0 0.24065 0.16175 0.30625 0.16175 0.30625\r\n      l 0.03685 0.01965\r\n      c 1.1001 0.58635 1.7835 1.7238 1.7835 2.9685\r\n      C 11.3322 17.8422 9.82405 19.3504 7.970300000000001 19.3504\r\n      z \r\n      M 8.6325 14.40705\r\n      c -0.03685 -0.013950000000000002 -0.11220000000000002 -0.036950000000000004 -0.11220000000000002 -0.16195\r\n      V 5.7743\r\n      c 0 -0.30375 -0.24625 -0.55 -0.55 -0.55\r\n      c -0.30375 0 -0.55 0.24625 -0.55 0.55\r\n      v 8.47075\r\n      c 0 0.12085 -0.08275 0.1506 -0.12315000000000001 0.16615000000000002\r\n      c -0.70225 0.27105 -1.20185 0.9531499999999999 -1.20185 1.7499\r\n      c 0 1.0339 0.8411 1.875 1.875 1.875\r\n      c 1.0339 0 1.875 -0.8411 1.875 -1.875\r\n      C 9.845300000000002 15.360300000000002 9.3405 14.67525 8.6325 14.40705\r\n      z \r\n      M 13.6669 4.2743\r\n      h 2.95175\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.13435 0.30000000000000004 -0.30000000000000004\r\n      c 0 -0.16565000000000002 -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -2.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      C 13.366900000000001 4.140000000000001 13.5012 4.2743 13.6669 4.2743\r\n      z \r\n      M 13.6669 6.2076\r\n      h 3.95175\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.13435 0.30000000000000004 -0.30000000000000004\r\n      c 0 -0.16565000000000002 -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -3.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      C 13.366900000000001 6.0733 13.5012 6.2076 13.6669 6.2076\r\n      z \r\n      M 13.6669 6.2076\r\n      h 3.95175\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.13435 0.30000000000000004 -0.30000000000000004\r\n      c 0 -0.16565000000000002 -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -3.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      C 13.366900000000001 6.0733 13.5012 6.2076 13.6669 6.2076\r\n      z \r\n      M 13.6669 8.1409\r\n      h 2.95175\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.13435 0.30000000000000004 -0.30000000000000004\r\n      s -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -2.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      S 13.5012 8.1409 13.6669 8.1409\r\n      z \r\n      M 17.618650000000002 10.0743\r\n      c 0.16570000000000001 0 0.30000000000000004 -0.1343 0.30000000000000004 -0.30000000000000004\r\n      c 0 -0.16565000000000002 -0.1343 -0.30000000000000004 -0.30000000000000004 -0.30000000000000004\r\n      h -3.95175\r\n      c -0.16565000000000002 0 -0.30000000000000004 0.13435 -0.30000000000000004 0.30000000000000004\r\n      c 0 0.16570000000000001 0.13435 0.30000000000000004 0.30000000000000004 0.30000000000000004\r\n      H 17.618650000000002\r\n      z \r\n      M 18.1105 15.468600000000002\r\n      l -1.7357500000000003 -2.24595\r\n      c -0.12140000000000001 -0.15700000000000003 -0.29705 -0.24705 -0.48200000000000004 -0.24705\r\n      c -0.1849 0 -0.36060000000000003 0.09010000000000001 -0.48200000000000004 0.24710000000000001\r\n      l -1.7357500000000003 2.2458500000000003\r\n      c -0.13675 0.17695000000000002 -0.1686 0.3735 -0.08725000000000001 0.5392\r\n      c 0.0814 0.16570000000000001 0.25630000000000003 0.26080000000000003 0.48 0.26080000000000003\r\n      h 0.4093\r\n      c 0.054200000000000005 0 0.1 0.04580000000000001 0.1 0.1\r\n      v 2.4640500000000003\r\n      c 0 0.386 0.31400000000000006 0.7000000000000001 0.7000000000000001 0.7000000000000001\r\n      h 1.1347500000000001\r\n      c 0.386 0 0.7000000000000001 -0.31400000000000006 0.7000000000000001 -0.7000000000000001\r\n      v -2.4640500000000003\r\n      c 0 -0.054200000000000005 0.04580000000000001 -0.1 0.1 -0.1\r\n      h 0.50595\r\n      c 0.2237 0 0.39860000000000007 -0.09505000000000001 0.48 -0.26080000000000003\r\n      C 18.2791 15.84205 18.24725 15.645500000000002 18.1105 15.468600000000002\r\n      z \r\n      M 17.43495 15.66855\r\n      c -0.05575 0 -0.22315000000000002 0 -0.22315000000000002 0\r\n      c -0.386 0 -0.7000000000000001 0.31400000000000006 -0.7000000000000001 0.7000000000000001\r\n      v 2.4640500000000003\r\n      c 0 0.054200000000000005 -0.04580000000000001 0.1 -0.1 0.1\r\n      h -1.1347500000000001\r\n      c -0.054200000000000005 0 -0.1 -0.04580000000000001 -0.1 -0.1\r\n      v -2.4640500000000003\r\n      c 0 -0.386 -0.31400000000000006 -0.7000000000000001 -0.7000000000000001 -0.7000000000000001\r\n      c 0 0 -0.10420000000000001 0 -0.13895 0\r\n      c -0.057050000000000003 0 -0.03545 -0.030850000000000002 -0.03545 -0.030850000000000002\r\n      l 1.5053 -1.9476500000000003\r\n      c 0 0 0.0419 -0.052300000000000006 0.08485000000000001 -0.052300000000000006\r\n      c 0.04530000000000001 0 0.08750000000000001 0.05560000000000001 0.08750000000000001 0.05560000000000001\r\n      l 1.4999500000000001 1.9409\r\n      C 17.4802 15.6343 17.5076 15.66855 17.43495 15.66855\r\n      z\r\n    `} />,\r\n  ];\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemperatureGauge\r\n","import React, {Component} from 'react';\r\n\r\nclass Oxygen extends Component {\r\n  static path = <path d={`\r\n    M 12.660925 10.696375\r\n    C 12.660925 7.7013750000000005 10.945475000000002 6 8.4145 6\r\n    S 4.1681 7.6873249999999995 4.1681 10.696375\r\n    c 0 3.0090250000000003 1.7154250000000002 4.780725 4.246425 4.780725\r\n    S 12.660925 13.705425 12.660925 10.696375\r\n    z \r\n    M 6.642825 10.696375\r\n    c 0 -1.6592 0.674925 -2.6153500000000003 1.771675 -2.6153500000000003\r\n    s 1.7717 0.956175 1.7717 2.6153500000000003\r\n    c 0 1.6591750000000003 -0.67495 2.6997 -1.7717 2.6997\r\n    S 6.642825 12.355550000000001 6.642825 10.696375\r\n    z \r\n    M 19.1319 19.800200000000004\r\n    v -0.0008500000000000001\r\n    c 0 -0.2896 -0.234525 -0.5245000000000001 -0.5241250000000001 -0.524975\r\n    l -2.342175 -0.00385\r\n    c 1.20925 -1.2373750000000001 2.4444500000000002 -2.6950250000000002 2.4444500000000002 -4.12925\r\n    c 0 -1.771675 -1.2654750000000001 -2.9247 -3.0653 -2.9247\r\n    c -1.13535 0 -1.9179500000000003 0.332 -2.70425 1.049425\r\n    c -0.22060000000000002 0.2013 -0.22719999999999999 0.5467500000000001 -0.016050000000000002 0.7579250000000001\r\n    l 0.558775 0.558775\r\n    c 0.19595 0.19595 0.50975 0.20497500000000002 0.7183250000000001 0.02255\r\n    c 0.32325000000000004 -0.282725 0.6775000000000001 -0.5045000000000001 1.105725 -0.5045000000000001\r\n    c 0.6468 0 1.09675 0.37965000000000004 1.09675 1.181125\r\n    c 0 1.176625 -1.544275 2.6195250000000003 -3.5706249999999997 4.484100000000001\r\n    c -0.10805000000000001 0.099425 -0.16957500000000003 0.239575 -0.16957500000000003 0.3864\r\n    V 20.775\r\n    c 0 0.28995000000000004 0.235025 0.524975 0.524975 0.524975\r\n    h 5.418125\r\n    c 0.289925 0 0.524975 -0.235025 0.524975 -0.524975\r\n    V 19.800200000000004\r\n    z\r\n  `} />;\r\n  render() {\r\n    const {offset} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {this.constructor.path}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Oxygen\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport ResourceBox from \"../resources/ResourceBox\";\r\nimport RightArrow from \"../draw/RightArrow\";\r\nimport CityIcon from \"../draw/CityIcon\";\r\nimport ProductionBox from \"../resources/ProductionBox\";\r\nimport _ from 'underscore';\r\nimport OceanIcon from \"../draw/OceanIcon\";\r\nimport GreeneryIcon from \"../draw/GreeneryIcon\";\r\nimport TemperatureGauge from \"../draw/TemperatureGauge\";\r\nimport Oxygen from \"../draw/Oxygen\";\r\n\r\nclass StandardProject extends Component {\r\n  static tilesComponents = {\r\n    'city': CityIcon,\r\n    'ocean': OceanIcon,\r\n    'greenery': GreeneryIcon,\r\n  };\r\n  static globalParametersComponents = {\r\n    'temperature': TemperatureGauge,\r\n    'oxygen': Oxygen,\r\n    'oceans': null,\r\n  };\r\n\r\n  canPurchase() {\r\n    return GameService.canPurchase(this.props.game, this.props.activePlayer, this.props.project);\r\n  }\r\n\r\n  purchase = () => {\r\n    this.props.control.purchaseProject(this.props.activePlayer, this.props.project);\r\n  };\r\n\r\n  render() {\r\n    const {offset, project} = this.props;\r\n    const canPurchase = this.canPurchase();\r\n    const globalParametersComponents = _.flatten(_.pairs(project.globalParameters).map(([name, count]) =>\r\n      _.range(count).map(() => name)))\r\n      .map(parameter => this.constructor.globalParametersComponents[parameter])\r\n      .filter(GlobalParameter => GlobalParameter !== null);\r\n    const tilesComponents = _.flatten(_.pairs(project.tiles).map(([name, count]) =>\r\n      _.range(count).map(() => name)))\r\n      .map(tile => this.constructor.tilesComponents[tile]);\r\n    const benefits = _.pairs(project.benefit).map(\r\n      ([resourceName, {production, value}]) => [\r\n        ...(production ? [resourceName, {production}] : []),\r\n        ...(value ? [resourceName, {value}] : []),\r\n      ]);\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {Object.keys(project.cost).map((resourceName, index) => (\r\n          <ResourceBox\r\n            key={index}\r\n            resource={{\r\n              value: -project.cost[resourceName].value,\r\n              type: GameService.resourcesByName[resourceName],\r\n            }}\r\n            offset={{x: 25 * index, y: 0}}\r\n          />\r\n        ))}\r\n        <RightArrow offset={{x: Object.keys(project.cost).length * 25, y: 0}}/>\r\n        {globalParametersComponents.map((GlobalParameter, index) => (\r\n          <GlobalParameter\r\n            key={index}\r\n            offset={{x: (Object.keys(project.cost).length + 1) * 25, y: 0}}\r\n          />\r\n        ))}\r\n        {tilesComponents.map((Component, index) => (\r\n          <Component\r\n            key={index}\r\n            offset={{\r\n              x: (Object.keys(project.cost).length + 1 + globalParametersComponents.length) * 25,\r\n              y: 0,\r\n            }}\r\n          />\r\n        ))}\r\n        {benefits.map(([resourceName, productionOrValue], index) => (\r\n          productionOrValue.production ? (\r\n            <ProductionBox\r\n              key={index}\r\n              resource={{\r\n                ...productionOrValue,\r\n                type: GameService.resourcesByName[resourceName],\r\n              }}\r\n              offset={{x: (Object.keys(project.cost).length + 1 + globalParametersComponents.length + tilesComponents.length + index) * 25, y: 0}}\r\n            />\r\n          ) : (\r\n            <ResourceBox\r\n              key={index}\r\n              resource={{\r\n                ...productionOrValue,\r\n                type: GameService.resourcesByName[resourceName],\r\n              }}\r\n              offset={{x: (Object.keys(project.cost).length + 1 + globalParametersComponents.length + tilesComponents.length + index) * 25, y: 0}}\r\n            />\r\n          )\r\n        ))}\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'yellow'} fillOpacity={canPurchase ? undefined : 0.4}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n        <text x={110} y={20} fill={'black'}>{project.label}</text>\r\n        <rect\r\n          x={100} y={0} width={130} height={25}\r\n          fill={'transparent'}\r\n          className={canPurchase ? 'clickable' : undefined}\r\n          onClick={canPurchase ? this.purchase : null}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StandardProject\r\n","import React, {Component} from \"react\";\r\nimport GameService from \"../../game/GameService\";\r\nimport StandardProject from \"./StandardProject\";\r\n\r\nclass StandardProjects extends Component {\r\n  static getSize(game) {\r\n    return {width: 250, height: 310};\r\n  }\r\n\r\n  render() {\r\n    const {offset, game, control} = this.props;\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <rect\r\n          x={0} y={10} width={250} height={300}\r\n          fill={'silver'}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n\r\n        <rect\r\n          x={10} y={0} width={150} height={25}\r\n          fill={'yellow'}\r\n          stroke={'black'} strokeWidth={2}\r\n        />\r\n        <text x={20} y={20} fill={'black'}>Standard Projects</text>\r\n\r\n        {GameService.standardProjects.map((project, index) => (\r\n          <StandardProject\r\n            key={index}\r\n            offset={{x: 10, y: 35 + 25 * index}}\r\n            game={game} activePlayer={game.activePlayer} project={project}\r\n            control={control}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StandardProjects;\r\n","import React, {Component, Fragment} from \"react\";\r\n\r\nclass GlobalParameter extends Component {\r\n  static getSize(parameter) {\r\n    return {\r\n      width: 200,\r\n      height: 30,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {offset, parameter} = this.props;\r\n    const globalParametersSize = this.constructor.getSize(parameter);\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        <rect\r\n          x={0} y={0}\r\n          width={globalParametersSize.width}\r\n          height={globalParametersSize.height}\r\n        />\r\n        {parameter.maxValue !== null ? (\r\n          <Fragment>\r\n            <mask x={0} y={0} id={`globalParameterMask-${parameter.name}`}>\r\n              <rect\r\n                x={0} y={0}\r\n                width={globalParametersSize.width * parameter.value / parameter.maxValue}\r\n                height={globalParametersSize.height}\r\n                fill={'white'}\r\n              />\r\n            </mask>\r\n            <rect\r\n              x={0} y={0}\r\n              width={globalParametersSize.width}\r\n              height={globalParametersSize.height}\r\n              style={{pointerEvents: 'none'}}\r\n              fill={`url(#${GlobalParameterDef.getXlinkHref(parameter)})`}\r\n              mask={`url(#globalParameterMask-${parameter.name})`}\r\n            />\r\n          </Fragment>\r\n        ) : null}\r\n        <text\r\n          x={10} y={20}\r\n          fill={'white'}\r\n          style={{pointerEvents: 'none'}}\r\n        >\r\n          {parameter.label}: {parameter.getLabel(parameter)}\r\n          {parameter.maxValue !== null\r\n            ? `(${parameter.value}/${parameter.maxValue})`\r\n            : null}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nclass GlobalParameterDef extends Component {\r\n  static getXlinkHref(parameter) {\r\n    return `globalParameterGradient-${parameter.name}`;\r\n  }\r\n\r\n  render() {\r\n    const {parameter} = this.props;\r\n    return (\r\n      <linearGradient\r\n        id={this.constructor.getXlinkHref(parameter)} \r\n      >\r\n        <stop offset={\"5%\"}  stopColor={parameter.emptyColour} />\r\n        <stop offset={\"95%\"} stopColor={parameter.fullColour} />\r\n      </linearGradient>\r\n    );\r\n  }\r\n}\r\nGlobalParameter.Def = GlobalParameterDef;\r\n\r\nexport default GlobalParameter;\r\n","import React, {Component} from \"react\";\r\nimport GlobalParameter from \"./GlobalParameter\";\r\nimport GameService from \"../../game/GameService\";\r\n\r\nclass GlobalParameters extends Component {\r\n  static columnsPerRow = 2;\r\n  static getSize(parameters) {\r\n    const globalParameterSize = GlobalParameter.getSize(null);\r\n    const rows = Math.ceil(parameters.length / this.columnsPerRow);\r\n    return {\r\n      width: this.columnsPerRow * globalParameterSize.width,\r\n      height: rows * globalParameterSize.height + Math.max(0, rows - 1) * 10,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {offset, parameters} = this.props;\r\n    const globalParameterSize = GlobalParameter.getSize(null);\r\n    return (\r\n      <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n        {parameters.map((parameter, index) => {\r\n          const column = index % this.constructor.columnsPerRow;\r\n          const row = Math.floor(index / this.constructor.columnsPerRow);\r\n          return (\r\n            <GlobalParameter\r\n              offset={{\r\n                x: column * (globalParameterSize.width + 10),\r\n                y: row * (globalParameterSize.height + 10),\r\n              }}\r\n              key={parameter.name}\r\n              parameter={parameter}\r\n            />\r\n          );\r\n        })}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nclass GlobalParametersDefs extends Component {\r\n  render() {\r\n    return GameService.globalParameters.map(parameter => (\r\n      <GlobalParameter.Def key={parameter.name} parameter={parameter}/>\r\n    ));\r\n  }\r\n}\r\nGlobalParameters.Defs = GlobalParametersDefs;\r\n\r\nexport default GlobalParameters;\r\n","import React, {Component} from \"react\";\r\nimport Board from \"./board/Board\";\r\nimport Players from \"./players/Players\";\r\nimport StandardProjects from \"./projects/StandardProjects\";\r\nimport GlobalParameters from \"./parameters/GlobalParameters\";\r\nimport DefaultHexagon from \"./draw/DefaultHexagon\";\r\nimport OceanIcon from \"./draw/OceanIcon\";\r\nimport CityIcon from \"./draw/CityIcon\";\r\n\r\nclass Game extends Component {\r\n  static getSize(game) {\r\n    const boardSize = Board.getSize(game.board);\r\n    const playersSize = Players.getSize(game.players);\r\n    const standardProjectsSize = StandardProjects.getSize(game);\r\n    return {\r\n      width: 10 + Math.max(boardSize.width, playersSize.width, standardProjectsSize.width) + 10,\r\n      height: 10 + boardSize.height + 20 + playersSize.height + 20 + standardProjectsSize.height + 10,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {game, control} = this.props;\r\n    const gameSize = this.constructor.getSize(game);\r\n    const globalParametersSize = GlobalParameters.getSize(game.globalParameters);\r\n    const boardSize = Board.getSize(game.board);\r\n    const playersSize = Players.getSize(game.players);\r\n    return (\r\n      <svg width={gameSize.width} height={gameSize.height}>\r\n        <defs>\r\n          <GlobalParameters.Defs />\r\n          <DefaultHexagon.Def/>\r\n          <OceanIcon.Def/>\r\n          <CityIcon.Def/>\r\n        </defs>\r\n        <GlobalParameters\r\n          parameters={game.globalParameters}\r\n          offset={{x: 10, y: 10}}\r\n        />\r\n        <Board\r\n          game={game} control={control} activePlayer={game.activePlayer} board={game.board}\r\n          offset={{x: 10, y: 10 + globalParametersSize.height + 20}}\r\n        />\r\n        <Players\r\n          offset={{\r\n            x: 10,\r\n            y: 10 + globalParametersSize.height + 20 + boardSize.height + 20,\r\n          }}\r\n          players={game.players}\r\n          control={control}\r\n        />\r\n        <StandardProjects\r\n          offset={{\r\n            x: 10,\r\n            y: 10 + globalParametersSize.height + 20 + boardSize.height + 20 + playersSize.height + 20\r\n          }}\r\n          game={game}\r\n          control={control}\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import GameService from \"./GameService\";\r\nimport _ from \"underscore\";\r\n\r\nclass GameControl {\r\n  constructor(update) {\r\n    this.update = update;\r\n  }\r\n\r\n  getPlayer(game, player) {\r\n    [player] = game.players\r\n      .filter(otherPlayer => otherPlayer.id === player.id);\r\n    if (!player) {\r\n      return null;\r\n    }\r\n    return player;\r\n  }\r\n\r\n  getTile(game, tile) {\r\n    [tile] = _.flatten(game.board)\r\n      .filter(otherTile => otherTile.x === tile.x && otherTile.y === tile.y);\r\n    if (!tile) {\r\n      return null;\r\n    }\r\n    return tile;\r\n  }\r\n\r\n  selectPlayer(player) {\r\n    this.update(game => ({\r\n      game: {\r\n        ...game,\r\n        activePlayer: player,\r\n        players: game.players.map(otherPlayer => ({\r\n          ...otherPlayer,\r\n          active: otherPlayer.id === player.id,\r\n        })),\r\n        action: null,\r\n      },\r\n    }));\r\n  }\r\n\r\n  purchaseProject(player, project) {\r\n    this.update(game => {\r\n      player = this.getPlayer(game, player);\r\n      if (!player) {\r\n        return null;\r\n      }\r\n      if (!player.active) {\r\n        return null;\r\n      }\r\n      const newGame = GameService.purchase(game, player, project);\r\n      if (newGame === game) {\r\n        return null;\r\n      }\r\n      return {game: newGame};\r\n    });\r\n    this.updateActivePlayer();\r\n  }\r\n\r\n  updateActivePlayer() {\r\n    this.update(game => {\r\n      let [activePlayer] = game.players.filter(player => player.active);\r\n      activePlayer = activePlayer || null;\r\n      if (activePlayer === game.activePlayer) {\r\n        return null;\r\n      }\r\n      return {\r\n        game: {\r\n          ...game,\r\n          activePlayer,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  placeOcean(player, tile) {\r\n    this.update(game => {\r\n      player = this.getPlayer(game, player);\r\n      if (!player) {\r\n        return null;\r\n      }\r\n      if (!player.active) {\r\n        return null;\r\n      }\r\n      tile = this.getTile(game, tile);\r\n      if (!tile) {\r\n        return null;\r\n      }\r\n      const newGame = GameService.placeOcean(game, player, tile);\r\n      if (newGame === game) {\r\n        return null;\r\n      }\r\n      return {game: newGame};\r\n    });\r\n  }\r\n\r\n  placeGreenery(player, tile) {\r\n    this.update(game => {\r\n      player = this.getPlayer(game, player);\r\n      if (!player) {\r\n        return null;\r\n      }\r\n      if (!player.active) {\r\n        return null;\r\n      }\r\n      tile = this.getTile(game, tile);\r\n      if (!tile) {\r\n        return null;\r\n      }\r\n      const newGame = GameService.placeGreenery(game, player, tile);\r\n      if (newGame === game) {\r\n        return null;\r\n      }\r\n      return {game: newGame};\r\n    });\r\n  }\r\n\r\n  placeCity(player, tile) {\r\n    this.update(game => {\r\n      player = this.getPlayer(game, player);\r\n      if (!player) {\r\n        return null;\r\n      }\r\n      if (!player.active) {\r\n        return null;\r\n      }\r\n      tile = this.getTile(game, tile);\r\n      if (!tile) {\r\n        return null;\r\n      }\r\n      const newGame = GameService.placeCity(game, player, tile);\r\n      if (newGame === game) {\r\n        return null;\r\n      }\r\n      return {game: newGame};\r\n    });\r\n  }\r\n}\r\n\r\nexport default GameControl;\r\n","import React, {Component, Fragment} from 'react';\nimport './App.css';\nimport GameService from \"./game/GameService\";\nimport Game from \"./components/Game\";\nimport GameControl from \"./game/GameControl\";\n\nclass App extends Component {\n\tstate = {\n    game: GameService.makeGame(),\n  };\n\n\tupdateGame = func => {\n\t  this.setState(({game}) => func(game));\n  };\n\n\tcontrol = new GameControl(this.updateGame);\n\n\trender() {\n  \tconst {game} = this.state;\n  \treturn (\n    \t<Fragment>\n    \t  Gaiaforming Ares\n        <br />\n      \t<Game game={game} control={this.control} />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}